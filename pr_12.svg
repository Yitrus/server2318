<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>vfs_read (4,608,059,206 samples, 0.03%)</title><rect x="1185.6" y="341" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1188.57" y="351.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (3,310,510,789 samples, 0.02%)</title><rect x="15.6" y="309" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="18.62" y="319.5" ></text>
</g>
<g >
<title>pr (15,283,421,204,823 samples, 98.24%)</title><rect x="25.7" y="437" width="1159.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.73" y="447.5" >pr</text>
</g>
<g >
<title>syscall.read (11,142,586,549 samples, 0.07%)</title><rect x="1188.9" y="261" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.94" y="271.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (36,043,195,528 samples, 0.23%)</title><rect x="12.6" y="325" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="15.59" y="335.5" ></text>
</g>
<g >
<title>do_exit (34,037,902,332 samples, 0.22%)</title><rect x="22.7" y="309" width="2.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="25.67" y="319.5" ></text>
</g>
<g >
<title>__lookup_slow (1,724,145,869 samples, 0.01%)</title><rect x="19.9" y="229" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="22.88" y="239.5" ></text>
</g>
<g >
<title>[perf-7708.map] (2,228,335,623 samples, 0.01%)</title><rect x="18.1" y="117" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.10" y="127.5" ></text>
</g>
<g >
<title>exit_mmap (1,558,329,317 samples, 0.01%)</title><rect x="18.6" y="277" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="21.63" y="287.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1,742,097,799 samples, 0.01%)</title><rect x="18.5" y="213" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.47" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (3,889,189,108 samples, 0.02%)</title><rect x="1184.4" y="293" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.45" y="303.5" ></text>
</g>
<g >
<title>do_sys_open (3,646,979,055 samples, 0.02%)</title><rect x="1185.1" y="341" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1188.06" y="351.5" ></text>
</g>
<g >
<title>proc_tgid_stat (2,120,091,886 samples, 0.01%)</title><rect x="1185.8" y="277" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.76" y="287.5" ></text>
</g>
<g >
<title>[unknown] (5,680,568,981 samples, 0.04%)</title><rect x="21.0" y="389" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="24.02" y="399.5" ></text>
</g>
<g >
<title>clear_huge_page (2,384,610,576 samples, 0.02%)</title><rect x="1184.7" y="309" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1187.74" y="319.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (15,453,114,407 samples, 0.10%)</title><rect x="22.7" y="277" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="25.67" y="287.5" ></text>
</g>
<g >
<title>__open64 (10,588,657,793 samples, 0.07%)</title><rect x="19.6" y="389" width="0.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="22.59" y="399.5" ></text>
</g>
<g >
<title>do_readlinkat (3,436,064,253 samples, 0.02%)</title><rect x="10.1" y="277" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.12" y="287.5" ></text>
</g>
<g >
<title>[unknown] (3,129,672,299 samples, 0.02%)</title><rect x="1185.9" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1188.92" y="431.5" ></text>
</g>
<g >
<title>load_elf_binary (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="325" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="21.63" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="405" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.67" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.32] (2,863,924,565 samples, 0.02%)</title><rect x="19.3" y="405" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="22.28" y="415.5" ></text>
</g>
<g >
<title>proc_reg_read (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="133" width="0.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1191.94" y="143.5" ></text>
</g>
<g >
<title>PageRankPullGS (24,979,729,090 samples, 0.16%)</title><rect x="25.7" y="421" width="1.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="28.74" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3,885,560,221 samples, 0.02%)</title><rect x="10.1" y="389" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,357,844,057 samples, 0.06%)</title><rect x="21.9" y="405" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="24.88" y="415.5" ></text>
</g>
<g >
<title>memory_stat.sh (3,550,853,659 samples, 0.02%)</title><rect x="17.5" y="437" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="20.54" y="447.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (8,197,943,830 samples, 0.05%)</title><rect x="21.9" y="293" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="24.91" y="303.5" ></text>
</g>
<g >
<title>[ToDesk_Service] (3,885,560,221 samples, 0.02%)</title><rect x="10.1" y="373" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.09" y="383.5" ></text>
</g>
<g >
<title>seq_read (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="117" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1191.94" y="127.5" ></text>
</g>
<g >
<title>account_user_time (3,472,915,902 samples, 0.02%)</title><rect x="1179.6" y="245" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1182.55" y="255.5" ></text>
</g>
<g >
<title>cpuidle_enter (19,008,189,016 samples, 0.12%)</title><rect x="1186.8" y="341" width="1.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.81" y="351.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (2,298,600,715 samples, 0.01%)</title><rect x="18.1" y="181" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="21.10" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,393,008,744 samples, 0.01%)</title><rect x="1186.0" y="405" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1188.97" y="415.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (2,413,504,434 samples, 0.02%)</title><rect x="18.9" y="405" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="21.86" y="415.5" ></text>
</g>
<g >
<title>tcp_get_idx (5,297,643,676 samples, 0.03%)</title><rect x="1189.3" y="69" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.31" y="79.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (2,298,600,715 samples, 0.01%)</title><rect x="18.1" y="165" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="21.10" y="175.5" ></text>
</g>
<g >
<title>do_sys_open (8,783,161,770 samples, 0.06%)</title><rect x="19.6" y="325" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="22.63" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,152,318,823 samples, 0.05%)</title><rect x="27.1" y="405" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="30.09" y="415.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (15,446,127,249 samples, 0.10%)</title><rect x="1183.0" y="405" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1186.01" y="415.5" ></text>
</g>
<g >
<title>[unknown] (15,248,486,867,986 samples, 98.01%)</title><rect x="27.6" y="421" width="1156.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="30.63" y="431.5" >[unknown]</text>
</g>
<g >
<title>path_put (1,662,683,229 samples, 0.01%)</title><rect x="12.7" y="293" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="15.67" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,495,889,289 samples, 0.02%)</title><rect x="10.1" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.12" y="335.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="357" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.67" y="367.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (14,780,808,826 samples, 0.10%)</title><rect x="24.1" y="245" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="27.10" y="255.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (4,310,837,409 samples, 0.03%)</title><rect x="21.0" y="373" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="24.02" y="383.5" ></text>
</g>
<g >
<title>[unknown] (12,490,565,962 samples, 0.08%)</title><rect x="19.5" y="405" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.50" y="415.5" ></text>
</g>
<g >
<title>[perf-7708.map] (2,228,335,623 samples, 0.01%)</title><rect x="18.1" y="85" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.10" y="95.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (1,765,051,093 samples, 0.01%)</title><rect x="18.5" y="245" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="21.47" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,813,605,958 samples, 0.03%)</title><rect x="15.6" y="373" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.55" y="383.5" ></text>
</g>
<g >
<title>[ToDesk_Service] (3,885,560,221 samples, 0.02%)</title><rect x="10.1" y="357" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.09" y="367.5" ></text>
</g>
<g >
<title>git (69,121,968,765 samples, 0.44%)</title><rect x="11.5" y="437" width="5.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="14.49" y="447.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (9,056,232,142 samples, 0.06%)</title><rect x="17.9" y="373" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="20.92" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_openat (8,783,161,770 samples, 0.06%)</title><rect x="19.6" y="341" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="22.63" y="351.5" ></text>
</g>
<g >
<title>__lxstat64 (39,202,550,936 samples, 0.25%)</title><rect x="12.4" y="389" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.44" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (37,383,729,492 samples, 0.24%)</title><rect x="12.6" y="357" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="15.56" y="367.5" ></text>
</g>
<g >
<title>pgrep (3,090,494,742 samples, 0.02%)</title><rect x="25.5" y="437" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="28.50" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,357,844,057 samples, 0.06%)</title><rect x="21.9" y="389" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.88" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,691,861,856 samples, 0.01%)</title><rect x="21.5" y="309" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="24.50" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7,152,318,823 samples, 0.05%)</title><rect x="27.1" y="341" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="30.09" y="351.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1,658,800,952 samples, 0.01%)</title><rect x="1182.4" y="325" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1185.41" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,452,882,934 samples, 0.02%)</title><rect x="10.1" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.12" y="319.5" ></text>
</g>
<g >
<title>prep_new_page (3,837,310,365 samples, 0.02%)</title><rect x="1184.4" y="261" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1187.45" y="271.5" ></text>
</g>
<g >
<title>teamviewerd (1,491,122,655 samples, 0.01%)</title><rect x="1189.8" y="437" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.79" y="447.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (3,439,262,491 samples, 0.02%)</title><rect x="15.1" y="277" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="18.06" y="287.5" ></text>
</g>
<g >
<title>[perf-7708.map] (2,229,040,763 samples, 0.01%)</title><rect x="18.1" y="133" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.10" y="143.5" ></text>
</g>
<g >
<title>__GI___execve (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="421" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="21.63" y="431.5" ></text>
</g>
<g >
<title>queued_write_lock_slowpath (15,783,596,190 samples, 0.10%)</title><rect x="24.0" y="261" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="27.02" y="271.5" ></text>
</g>
<g >
<title>ext4_getattr (1,944,371,187 samples, 0.01%)</title><rect x="15.2" y="245" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="18.17" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,443,702,428 samples, 0.01%)</title><rect x="20.8" y="389" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="23.84" y="399.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (15,460,455,638 samples, 0.10%)</title><rect x="22.7" y="293" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="25.67" y="303.5" ></text>
</g>
<g >
<title>sync_regs (3,680,339,121 samples, 0.02%)</title><rect x="1182.7" y="389" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1185.73" y="399.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (6,325,941,860 samples, 0.04%)</title><rect x="13.2" y="245" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="16.21" y="255.5" ></text>
</g>
<g >
<title>walk_component (11,664,969,366 samples, 0.07%)</title><rect x="13.7" y="245" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="16.71" y="255.5" ></text>
</g>
<g >
<title>all (15,557,682,120,407 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__lxstat64 (4,056,573,956 samples, 0.03%)</title><rect x="16.1" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.10" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="389" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1187.45" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (18,357,265,651 samples, 0.12%)</title><rect x="1186.8" y="325" width="1.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1189.84" y="335.5" ></text>
</g>
<g >
<title>trigger_load_balance (5,273,339,147 samples, 0.03%)</title><rect x="1181.5" y="245" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1184.53" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (2,895,928,518 samples, 0.02%)</title><rect x="1188.4" y="341" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1191.42" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="213" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.94" y="223.5" ></text>
</g>
<g >
<title>lookup_fast (1,332,637,654 samples, 0.01%)</title><rect x="13.6" y="213" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="16.57" y="223.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).readPoller (11,234,791,634 samples, 0.07%)</title><rect x="1188.9" y="389" width="0.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1191.93" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (3,293,820,956 samples, 0.02%)</title><rect x="17.0" y="421" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="19.97" y="431.5" ></text>
</g>
<g >
<title>get_signal (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="341" width="2.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="25.67" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (34,417,830,296 samples, 0.22%)</title><rect x="1179.4" y="293" width="2.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1182.43" y="303.5" ></text>
</g>
<g >
<title>v8::Function::Call (1,765,660,353 samples, 0.01%)</title><rect x="18.5" y="277" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="21.47" y="287.5" ></text>
</g>
<g >
<title>[perf-7708.map] (2,228,075,935 samples, 0.01%)</title><rect x="18.1" y="69" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.10" y="79.5" ></text>
</g>
<g >
<title>python (3,754,475,443 samples, 0.02%)</title><rect x="1185.9" y="437" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1188.92" y="447.5" ></text>
</g>
<g >
<title>uv__async_io.part.3 (1,873,141,917 samples, 0.01%)</title><rect x="17.9" y="293" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="20.93" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (45,529,865,095 samples, 0.29%)</title><rect x="1178.9" y="357" width="3.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1181.91" y="367.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).Start.func2.gowrap1 (11,234,791,634 samples, 0.07%)</title><rect x="1188.9" y="405" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.93" y="415.5" ></text>
</g>
<g >
<title>start_thread (2,786,905,150 samples, 0.02%)</title><rect x="18.9" y="421" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="21.86" y="431.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (15,787,531,245 samples, 0.10%)</title><rect x="24.0" y="277" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="27.02" y="287.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (1,338,223,582 samples, 0.01%)</title><rect x="10.7" y="389" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="13.69" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="389" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="21.63" y="399.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (1,683,813,177 samples, 0.01%)</title><rect x="19.2" y="405" width="0.1" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="22.15" y="415.5" ></text>
</g>
<g >
<title>read (4,731,437,493 samples, 0.03%)</title><rect x="1185.6" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1188.57" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,226,687,731 samples, 0.07%)</title><rect x="19.6" y="373" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="22.61" y="383.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (3,199,641,175 samples, 0.02%)</title><rect x="15.6" y="293" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="18.63" y="303.5" ></text>
</g>
<g >
<title>containerd (1,599,674,389 samples, 0.01%)</title><rect x="10.7" y="437" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.69" y="447.5" ></text>
</g>
<g >
<title>os.(*File).Read (11,143,302,291 samples, 0.07%)</title><rect x="1188.9" y="293" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1191.94" y="303.5" ></text>
</g>
<g >
<title>uv__io_poll (6,842,216,822 samples, 0.04%)</title><rect x="17.9" y="309" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="20.93" y="319.5" ></text>
</g>
<g >
<title>seq_read_iter (4,597,130,589 samples, 0.03%)</title><rect x="1185.6" y="309" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1188.58" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (27,420,096,211 samples, 0.18%)</title><rect x="1180.0" y="261" width="2.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1182.96" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,695,095,413 samples, 0.01%)</title><rect x="21.5" y="373" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="24.50" y="383.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1,745,634,869 samples, 0.01%)</title><rect x="18.5" y="229" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="21.47" y="239.5" ></text>
</g>
<g >
<title>cat (2,251,605,571 samples, 0.01%)</title><rect x="10.5" y="437" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="13.50" y="447.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (1,994,622,566 samples, 0.01%)</title><rect x="18.3" y="261" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="21.29" y="271.5" ></text>
</g>
<g >
<title>do_sys_openat2 (3,646,979,055 samples, 0.02%)</title><rect x="1185.1" y="325" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1188.06" y="335.5" ></text>
</g>
<g >
<title>syscall.Syscall (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="245" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.94" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_newlstat (36,043,708,161 samples, 0.23%)</title><rect x="12.6" y="341" width="2.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="15.59" y="351.5" ></text>
</g>
<g >
<title>do_group_exit (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="325" width="2.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="25.67" y="335.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (3,997,267,130 samples, 0.03%)</title><rect x="16.1" y="357" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="19.10" y="367.5" ></text>
</g>
<g >
<title>lookup_fast (11,265,042,870 samples, 0.07%)</title><rect x="13.7" y="229" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="16.73" y="239.5" ></text>
</g>
<g >
<title>account_process_tick (3,524,752,388 samples, 0.02%)</title><rect x="1179.5" y="261" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1182.55" y="271.5" ></text>
</g>
<g >
<title>PageRankPullGS (15,233,040,740,737 samples, 97.91%)</title><rect x="27.6" y="405" width="1155.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="30.63" y="415.5" >PageRankPullGS</text>
</g>
<g >
<title>entry_SYSCALL_64 (4,727,362,787 samples, 0.03%)</title><rect x="1185.6" y="405" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1188.57" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3,889,189,108 samples, 0.02%)</title><rect x="1184.4" y="309" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1187.45" y="319.5" ></text>
</g>
<g >
<title>uv_run (9,052,586,163 samples, 0.06%)</title><rect x="17.9" y="325" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="20.92" y="335.5" ></text>
</g>
<g >
<title>seq_read_iter (11,103,177,026 samples, 0.07%)</title><rect x="1188.9" y="101" width="0.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1191.94" y="111.5" ></text>
</g>
<g >
<title>do_filp_open (3,391,512,097 samples, 0.02%)</title><rect x="1185.1" y="309" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.06" y="319.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1,555,175,894 samples, 0.01%)</title><rect x="1182.1" y="325" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1185.15" y="335.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (28,297,349,479 samples, 0.18%)</title><rect x="1186.7" y="421" width="2.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1189.73" y="431.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1.1 (1,338,223,582 samples, 0.01%)</title><rect x="10.7" y="405" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="13.69" y="415.5" ></text>
</g>
<g >
<title>complete_walk (1,553,612,453 samples, 0.01%)</title><rect x="13.1" y="245" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="16.09" y="255.5" ></text>
</g>
<g >
<title>iterate_dir (4,677,396,205 samples, 0.03%)</title><rect x="15.6" y="341" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="18.56" y="351.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (2,442,376,250 samples, 0.02%)</title><rect x="18.1" y="245" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="21.09" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="405" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="21.63" y="415.5" ></text>
</g>
<g >
<title>[unknown] (9,883,590,595 samples, 0.06%)</title><rect x="17.9" y="421" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="20.88" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1,409,751,772 samples, 0.01%)</title><rect x="1188.7" y="357" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1191.66" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (49,695,822,488 samples, 0.32%)</title><rect x="1178.9" y="373" width="3.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1181.91" y="383.5" ></text>
</g>
<g >
<title>__alloc_file (1,907,585,744 samples, 0.01%)</title><rect x="19.6" y="245" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="22.64" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (60,322,791,544 samples, 0.39%)</title><rect x="1178.1" y="389" width="4.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1181.10" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (9,056,232,142 samples, 0.06%)</title><rect x="17.9" y="405" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="20.92" y="415.5" ></text>
</g>
<g >
<title>uv__wait_children (2,443,432,727 samples, 0.02%)</title><rect x="18.1" y="277" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="21.09" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="181" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.94" y="191.5" ></text>
</g>
<g >
<title>node (16,028,123,795 samples, 0.10%)</title><rect x="17.9" y="437" width="1.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="20.86" y="447.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="357" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="21.63" y="367.5" ></text>
</g>
<g >
<title>cpu_startup_entry (28,262,046,595 samples, 0.18%)</title><rect x="1186.7" y="389" width="2.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.73" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4,820,481,511 samples, 0.03%)</title><rect x="15.6" y="389" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="18.55" y="399.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (2,298,600,715 samples, 0.01%)</title><rect x="18.1" y="197" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="21.10" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1,928,643,048 samples, 0.01%)</title><rect x="10.9" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.87" y="431.5" ></text>
</g>
<g >
<title>bprm_execve (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="341" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="21.63" y="351.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (1,765,051,093 samples, 0.01%)</title><rect x="18.5" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="21.47" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="421" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="25.67" y="431.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (1,551,668,989 samples, 0.01%)</title><rect x="10.7" y="421" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.69" y="431.5" ></text>
</g>
<g >
<title>generic_fillattr (1,337,419,216 samples, 0.01%)</title><rect x="15.2" y="229" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="18.22" y="239.5" ></text>
</g>
<g >
<title>vfs_read (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="149" width="0.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1191.94" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,681,269,754 samples, 0.02%)</title><rect x="1185.1" y="373" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.06" y="383.5" ></text>
</g>
<g >
<title>established_get_first (3,549,371,984 samples, 0.02%)</title><rect x="1189.4" y="37" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1192.41" y="47.5" ></text>
</g>
<g >
<title>call_cpuidle (19,104,521,677 samples, 0.12%)</title><rect x="1186.8" y="357" width="1.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1189.81" y="367.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (2,298,600,715 samples, 0.01%)</title><rect x="18.1" y="149" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="21.10" y="159.5" ></text>
</g>
<g >
<title>pvector&lt;float&gt;::fill (9,695,432,505 samples, 0.06%)</title><rect x="1184.2" y="421" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1187.20" y="431.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*Poller).Poll (11,192,928,086 samples, 0.07%)</title><rect x="1188.9" y="373" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.94" y="383.5" ></text>
</g>
<g >
<title>schedule_idle (2,986,510,381 samples, 0.02%)</title><rect x="1188.4" y="357" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.42" y="367.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="325" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1187.45" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,328,793,004 samples, 0.03%)</title><rect x="1187.0" y="261" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1189.98" y="271.5" ></text>
</g>
<g >
<title>[unknown] (7,210,949,589 samples, 0.05%)</title><rect x="1184.9" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.93" y="431.5" ></text>
</g>
<g >
<title>walk_component (2,044,078,860 samples, 0.01%)</title><rect x="13.5" y="229" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="16.54" y="239.5" ></text>
</g>
<g >
<title>std::thread::_M_start_thread (2,421,467,080 samples, 0.02%)</title><rect x="21.5" y="405" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="24.45" y="415.5" ></text>
</g>
<g >
<title>user_path_at_empty (26,211,363,209 samples, 0.17%)</title><rect x="13.0" y="293" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="16.04" y="303.5" ></text>
</g>
<g >
<title>do_sys_openat2 (8,783,161,770 samples, 0.06%)</title><rect x="19.6" y="309" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="22.63" y="319.5" ></text>
</g>
<g >
<title>swapper (28,483,131,516 samples, 0.18%)</title><rect x="1186.7" y="437" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1189.72" y="447.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,959,444,464 samples, 0.01%)</title><rect x="19.6" y="261" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.64" y="271.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (1,732,049,800 samples, 0.01%)</title><rect x="18.3" y="213" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.29" y="223.5" ></text>
</g>
<g >
<title>tailscaled (11,986,400,356 samples, 0.08%)</title><rect x="1188.9" y="437" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1191.88" y="447.5" ></text>
</g>
<g >
<title>release_task (16,525,656,876 samples, 0.11%)</title><rect x="24.0" y="293" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="26.99" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (2,280,381,165 samples, 0.01%)</title><rect x="27.5" y="293" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="30.46" y="303.5" ></text>
</g>
<g >
<title>ext4_file_getattr (3,082,635,095 samples, 0.02%)</title><rect x="15.1" y="261" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.08" y="271.5" ></text>
</g>
<g >
<title>[unknown] (33,229,492,294 samples, 0.21%)</title><rect x="19.2" y="421" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.15" y="431.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::OnExit (2,442,706,543 samples, 0.02%)</title><rect x="18.1" y="261" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="21.09" y="271.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (9,056,232,142 samples, 0.06%)</title><rect x="17.9" y="357" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="20.92" y="367.5" ></text>
</g>
<g >
<title>vfs_statx (35,298,416,803 samples, 0.23%)</title><rect x="12.6" y="309" width="2.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="15.64" y="319.5" ></text>
</g>
<g >
<title>uv__work_done (1,658,414,168 samples, 0.01%)</title><rect x="17.9" y="277" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="20.94" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="405" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1187.45" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,681,269,754 samples, 0.02%)</title><rect x="1185.1" y="389" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1188.06" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,290,672,739 samples, 0.06%)</title><rect x="1186.9" y="293" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1189.91" y="303.5" ></text>
</g>
<g >
<title>getname_flags (5,245,708,779 samples, 0.03%)</title><rect x="14.6" y="277" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="17.60" y="287.5" ></text>
</g>
<g >
<title>cpuidle_select (1,494,751,817 samples, 0.01%)</title><rect x="1188.3" y="357" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1191.26" y="367.5" ></text>
</g>
<g >
<title>do_task_stat (2,120,091,886 samples, 0.01%)</title><rect x="1185.8" y="261" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1188.76" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,899,451,235 samples, 0.02%)</title><rect x="1187.0" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.98" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (42,834,461,193 samples, 0.28%)</title><rect x="1179.1" y="341" width="3.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1182.11" y="351.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (11,559,748,786 samples, 0.07%)</title><rect x="1188.9" y="421" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.91" y="431.5" ></text>
</g>
<g >
<title>ksys_read (4,677,921,777 samples, 0.03%)</title><rect x="1185.6" y="357" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1188.57" y="367.5" ></text>
</g>
<g >
<title>filename_lookup (1,896,090,144 samples, 0.01%)</title><rect x="16.2" y="309" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="19.22" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,056,573,956 samples, 0.03%)</title><rect x="16.1" y="389" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.10" y="399.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (8,887,789,619 samples, 0.06%)</title><rect x="21.9" y="341" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="24.91" y="351.5" ></text>
</g>
<g >
<title>kthread (3,293,820,956 samples, 0.02%)</title><rect x="17.0" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="19.97" y="415.5" ></text>
</g>
<g >
<title>tcp_seq_next (4,790,258,631 samples, 0.03%)</title><rect x="1188.9" y="85" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.95" y="95.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).parseProcNetFile (11,186,738,913 samples, 0.07%)</title><rect x="1188.9" y="341" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.94" y="351.5" ></text>
</g>
<g >
<title>cpuUsage.sh (8,567,222,231 samples, 0.06%)</title><rect x="10.8" y="437" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.81" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (4,509,192,839 samples, 0.03%)</title><rect x="27.1" y="245" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="30.10" y="255.5" ></text>
</g>
<g >
<title>__GI___readlink (3,534,020,511 samples, 0.02%)</title><rect x="10.1" y="341" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="13.11" y="351.5" ></text>
</g>
<g >
<title>established_get_next (3,549,371,984 samples, 0.02%)</title><rect x="1189.4" y="53" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1192.41" y="63.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1,894,818,136 samples, 0.01%)</title><rect x="16.2" y="293" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="19.22" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,371,355,487 samples, 0.01%)</title><rect x="1187.1" y="229" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.09" y="239.5" ></text>
</g>
<g >
<title>filename_lookup (1,938,837,093 samples, 0.01%)</title><rect x="10.2" y="245" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.16" y="255.5" ></text>
</g>
<g >
<title>path_openat (6,879,012,603 samples, 0.04%)</title><rect x="19.6" y="277" width="0.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="22.64" y="287.5" ></text>
</g>
<g >
<title>strncpy_from_user (2,742,862,801 samples, 0.02%)</title><rect x="14.8" y="261" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="17.78" y="271.5" ></text>
</g>
<g >
<title>tcp_seq_start (5,297,643,676 samples, 0.03%)</title><rect x="1189.3" y="85" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1192.31" y="95.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,583,720,781 samples, 0.02%)</title><rect x="1187.3" y="277" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.32" y="287.5" ></text>
</g>
<g >
<title>__nanosleep (9,360,869,106 samples, 0.06%)</title><rect x="21.9" y="421" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="24.88" y="431.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (7,100,509,293 samples, 0.05%)</title><rect x="27.1" y="325" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="30.09" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,591,847,127 samples, 0.02%)</title><rect x="1182.4" y="357" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1185.36" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (11,142,586,549 samples, 0.07%)</title><rect x="1188.9" y="277" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1191.94" y="287.5" ></text>
</g>
<g >
<title>hrtimer_active (1,658,779,877 samples, 0.01%)</title><rect x="1180.8" y="229" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1183.78" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="341" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1187.45" y="351.5" ></text>
</g>
<g >
<title>[unknown] (53,421,597,755 samples, 0.34%)</title><rect x="12.0" y="421" width="4.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.99" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="197" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.94" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,906,072,547 samples, 0.06%)</title><rect x="19.6" y="357" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.63" y="367.5" ></text>
</g>
<g >
<title>task_tick_fair (10,099,445,729 samples, 0.06%)</title><rect x="1180.8" y="245" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1183.76" y="255.5" ></text>
</g>
<g >
<title>proc_single_show (3,549,255,198 samples, 0.02%)</title><rect x="1185.7" y="293" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1188.65" y="303.5" ></text>
</g>
<g >
<title>make_child (1,330,026,014 samples, 0.01%)</title><rect x="11.3" y="421" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="14.26" y="431.5" ></text>
</g>
<g >
<title>intel_idle (6,568,516,024 samples, 0.04%)</title><rect x="1187.7" y="309" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1190.68" y="319.5" ></text>
</g>
<g >
<title>node::SpinEventLoopInternal (9,056,232,142 samples, 0.06%)</title><rect x="17.9" y="341" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="20.92" y="351.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (1,447,608,737 samples, 0.01%)</title><rect x="20.8" y="405" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="23.84" y="415.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (4,209,517,443 samples, 0.03%)</title><rect x="19.8" y="261" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="22.80" y="271.5" ></text>
</g>
<g >
<title>ksamplingd (3,299,192,867 samples, 0.02%)</title><rect x="17.0" y="437" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="19.97" y="447.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="229" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.94" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (8,197,943,830 samples, 0.05%)</title><rect x="21.9" y="309" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="24.91" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,443,702,428 samples, 0.01%)</title><rect x="20.8" y="373" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.84" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (3,733,601,156 samples, 0.02%)</title><rect x="1184.4" y="245" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1187.45" y="255.5" ></text>
</g>
<g >
<title>ToDesk_Service (5,446,916,383 samples, 0.04%)</title><rect x="10.1" y="437" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="13.08" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (38,512,924,293 samples, 0.25%)</title><rect x="1179.2" y="325" width="2.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1182.20" y="335.5" ></text>
</g>
<g >
<title>uv__read (2,038,567,674 samples, 0.01%)</title><rect x="18.3" y="277" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="21.29" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (7,152,318,823 samples, 0.05%)</title><rect x="27.1" y="357" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="30.09" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_newlstat (3,997,267,130 samples, 0.03%)</title><rect x="16.1" y="373" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="19.10" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (7,014,701,434 samples, 0.05%)</title><rect x="19.6" y="293" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="22.64" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,201,962,507 samples, 0.03%)</title><rect x="1186.9" y="277" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1189.91" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (36,543,139,132 samples, 0.23%)</title><rect x="1179.3" y="309" width="2.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1182.34" y="319.5" ></text>
</g>
<g >
<title>exc_page_fault (7,152,318,823 samples, 0.05%)</title><rect x="27.1" y="389" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="30.09" y="399.5" ></text>
</g>
<g >
<title>node::Environment::RunTimers (1,884,388,772 samples, 0.01%)</title><rect x="18.5" y="293" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="21.46" y="303.5" ></text>
</g>
<g >
<title>vfs_getattr (3,842,161,250 samples, 0.02%)</title><rect x="15.0" y="293" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="18.03" y="303.5" ></text>
</g>
<g >
<title>node::Start (9,056,232,142 samples, 0.06%)</title><rect x="17.9" y="389" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="20.92" y="399.5" ></text>
</g>
<g >
<title>[git] (6,541,823,665 samples, 0.04%)</title><rect x="11.5" y="421" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.49" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,889,189,108 samples, 0.02%)</title><rect x="1184.4" y="277" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1187.45" y="287.5" ></text>
</g>
<g >
<title>ext4_readdir (4,279,603,704 samples, 0.03%)</title><rect x="15.6" y="325" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="18.56" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="373" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="25.67" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (1,695,095,413 samples, 0.01%)</title><rect x="21.5" y="357" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="24.50" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_openat (3,646,979,055 samples, 0.02%)</title><rect x="1185.1" y="357" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1188.06" y="367.5" ></text>
</g>
<g >
<title>uv__signal_event (2,443,432,727 samples, 0.02%)</title><rect x="18.1" y="293" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="21.09" y="303.5" ></text>
</g>
<g >
<title>begin_new_exec (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="309" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="21.63" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,677,921,777 samples, 0.03%)</title><rect x="1185.6" y="389" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.57" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,768,305,022 samples, 0.03%)</title><rect x="27.1" y="277" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="30.09" y="287.5" ></text>
</g>
<g >
<title>user_path_at_empty (2,388,604,189 samples, 0.02%)</title><rect x="10.2" y="261" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.16" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_getdents (4,753,619,465 samples, 0.03%)</title><rect x="15.6" y="357" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="18.55" y="367.5" ></text>
</g>
<g >
<title>[unknown] (4,857,498,433 samples, 0.03%)</title><rect x="10.1" y="421" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4,056,573,956 samples, 0.03%)</title><rect x="16.1" y="405" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="19.10" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (2,168,637,402 samples, 0.01%)</title><rect x="1181.3" y="229" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1184.35" y="239.5" ></text>
</g>
<g >
<title>[unknown] (42,402,439,788 samples, 0.27%)</title><rect x="12.2" y="405" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.22" y="415.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2,085,237,109 samples, 0.01%)</title><rect x="1187.4" y="245" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1190.38" y="255.5" ></text>
</g>
<g >
<title>update_curr (5,079,729,958 samples, 0.03%)</title><rect x="1181.0" y="229" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1183.96" y="239.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (15,243,057,499 samples, 0.10%)</title><rect x="22.7" y="261" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="25.68" y="271.5" ></text>
</g>
<g >
<title>update_process_times (34,365,999,745 samples, 0.22%)</title><rect x="1179.4" y="277" width="2.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1182.43" y="287.5" ></text>
</g>
<g >
<title>uv__stream_io (2,292,231,408 samples, 0.01%)</title><rect x="18.3" y="293" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.27" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,695,095,413 samples, 0.01%)</title><rect x="21.5" y="341" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.50" y="351.5" ></text>
</g>
<g >
<title>ksamplingd (3,278,740,930 samples, 0.02%)</title><rect x="17.0" y="389" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="19.97" y="399.5" ></text>
</g>
<g >
<title>inode_permission (1,720,368,016 samples, 0.01%)</title><rect x="13.4" y="229" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="16.35" y="239.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (1,991,120,283 samples, 0.01%)</title><rect x="18.3" y="245" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="21.29" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_read (4,677,921,777 samples, 0.03%)</title><rect x="1185.6" y="373" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1188.57" y="383.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (1,731,589,026 samples, 0.01%)</title><rect x="18.3" y="197" width="0.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="21.29" y="207.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (20,465,365,670 samples, 0.13%)</title><rect x="13.0" y="261" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="16.04" y="271.5" ></text>
</g>
<g >
<title>filename_lookup (20,509,561,405 samples, 0.13%)</title><rect x="13.0" y="277" width="1.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="16.04" y="287.5" ></text>
</g>
<g >
<title>clear_huge_page (2,280,381,165 samples, 0.01%)</title><rect x="27.5" y="309" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="30.46" y="319.5" ></text>
</g>
<g >
<title>[git] (2,834,507,907 samples, 0.02%)</title><rect x="12.0" y="405" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.99" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,888,238,475 samples, 0.06%)</title><rect x="21.9" y="357" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.91" y="367.5" ></text>
</g>
<g >
<title>prep_new_page (4,716,499,952 samples, 0.03%)</title><rect x="27.1" y="261" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="30.10" y="271.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (1,722,046,614 samples, 0.01%)</title><rect x="18.3" y="181" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="21.29" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages (4,768,305,022 samples, 0.03%)</title><rect x="27.1" y="293" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="30.09" y="303.5" ></text>
</g>
<g >
<title>pthread_create@@GLIBC_2.2.5 (1,778,508,380 samples, 0.01%)</title><rect x="21.5" y="389" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="24.50" y="399.5" ></text>
</g>
<g >
<title>vfs_statx (3,970,092,374 samples, 0.03%)</title><rect x="16.1" y="341" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="19.10" y="351.5" ></text>
</g>
<g >
<title>ksys_read (11,122,890,495 samples, 0.07%)</title><rect x="1188.9" y="165" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1191.94" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,633,137,727 samples, 0.01%)</title><rect x="18.6" y="373" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="21.63" y="383.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (11,143,302,291 samples, 0.07%)</title><rect x="1188.9" y="325" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.94" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="373" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.45" y="383.5" ></text>
</g>
<g >
<title>perf_event_task_tick (5,464,262,331 samples, 0.04%)</title><rect x="1180.3" y="245" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1183.34" y="255.5" ></text>
</g>
<g >
<title>get_signal (8,887,789,619 samples, 0.06%)</title><rect x="21.9" y="325" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="24.91" y="335.5" ></text>
</g>
<g >
<title>v8::Function::Call (2,298,600,715 samples, 0.01%)</title><rect x="18.1" y="213" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="21.10" y="223.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (2,073,397,705 samples, 0.01%)</title><rect x="1180.2" y="245" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1183.17" y="255.5" ></text>
</g>
<g >
<title>do_idle (27,746,557,122 samples, 0.18%)</title><rect x="1186.7" y="373" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1189.74" y="383.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (1,977,463,258 samples, 0.01%)</title><rect x="18.3" y="229" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="21.29" y="239.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (11,143,302,291 samples, 0.07%)</title><rect x="1188.9" y="309" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.94" y="319.5" ></text>
</g>
<g >
<title>std::runtime_error::~runtime_error (5,680,568,981 samples, 0.04%)</title><rect x="21.0" y="405" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="24.02" y="415.5" ></text>
</g>
<g >
<title>__getdents64 (4,820,481,511 samples, 0.03%)</title><rect x="15.6" y="405" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="18.55" y="415.5" ></text>
</g>
<g >
<title>node::MakeLibuvRequestCallback&lt;uv_fs_s, void  (1,658,414,168 samples, 0.01%)</title><rect x="17.9" y="261" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="20.94" y="271.5" ></text>
</g>
<g >
<title>ps (13,069,201,154 samples, 0.08%)</title><rect x="1184.9" y="437" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1187.93" y="447.5" ></text>
</g>
<g >
<title>user_path_at_empty (2,375,357,870 samples, 0.02%)</title><rect x="16.2" y="325" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.22" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (2,332,782,468 samples, 0.01%)</title><rect x="1184.7" y="293" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1187.74" y="303.5" ></text>
</g>
<g >
<title>start_secondary (28,288,104,316 samples, 0.18%)</title><rect x="1186.7" y="405" width="2.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1189.73" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7,152,318,823 samples, 0.05%)</title><rect x="27.1" y="373" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="30.09" y="383.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).AppendListeningPorts (11,192,928,086 samples, 0.07%)</title><rect x="1188.9" y="357" width="0.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.94" y="367.5" ></text>
</g>
<g >
<title>sh (2,174,347,874 samples, 0.01%)</title><rect x="1186.3" y="437" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1189.31" y="447.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (10,667,967,125 samples, 0.07%)</title><rect x="13.8" y="213" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="16.77" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,325,648,775 samples, 0.04%)</title><rect x="1184.4" y="357" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.45" y="367.5" ></text>
</g>
<g >
<title>pcm-memory (83,758,191,732 samples, 0.54%)</title><rect x="19.1" y="437" width="6.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="22.10" y="447.5" ></text>
</g>
<g >
<title>proc_pid_status (1,415,345,973 samples, 0.01%)</title><rect x="1185.7" y="277" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1188.66" y="287.5" ></text>
</g>
<g >
<title>security_inode_getattr (3,193,851,135 samples, 0.02%)</title><rect x="12.8" y="293" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="15.80" y="303.5" ></text>
</g>
<g >
<title>path_openat (3,391,512,097 samples, 0.02%)</title><rect x="1185.1" y="293" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1188.06" y="303.5" ></text>
</g>
<g >
<title>[ToDesk_Service] (3,885,952,216 samples, 0.02%)</title><rect x="10.1" y="405" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.09" y="415.5" ></text>
</g>
<g >
<title>[libgcc_s.so.1] (3,338,373,075 samples, 0.02%)</title><rect x="21.1" y="357" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="24.09" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_open (3,688,836,436 samples, 0.02%)</title><rect x="1185.1" y="405" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1188.06" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (3,436,064,253 samples, 0.02%)</title><rect x="10.1" y="293" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="13.12" y="303.5" ></text>
</g>
<g >
<title>established_get_first (2,968,143,627 samples, 0.02%)</title><rect x="1188.9" y="69" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.95" y="79.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (8,888,238,475 samples, 0.06%)</title><rect x="21.9" y="373" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="24.91" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,296,899,321 samples, 0.06%)</title><rect x="1186.9" y="309" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1189.91" y="319.5" ></text>
</g>
<g >
<title>[perf-7708.map] (2,228,335,623 samples, 0.01%)</title><rect x="18.1" y="101" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.10" y="111.5" ></text>
</g>
<g >
<title>uv__run_timers (1,899,298,534 samples, 0.01%)</title><rect x="18.5" y="309" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="21.46" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,691,861,856 samples, 0.01%)</title><rect x="21.5" y="325" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="24.50" y="335.5" ></text>
</g>
<g >
<title>__do_softirq (2,384,507,602 samples, 0.02%)</title><rect x="1182.4" y="341" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1185.36" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (38,206,831,393 samples, 0.25%)</title><rect x="12.5" y="373" width="2.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.50" y="383.5" ></text>
</g>
<g >
<title>__do_softirq (3,547,167,456 samples, 0.02%)</title><rect x="1187.3" y="261" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.32" y="271.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (1,528,770,435 samples, 0.01%)</title><rect x="21.5" y="293" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="24.52" y="303.5" ></text>
</g>
<g >
<title>mmput (1,558,329,317 samples, 0.01%)</title><rect x="18.6" y="293" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="21.63" y="303.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1,932,160,530 samples, 0.01%)</title><rect x="10.2" y="229" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="13.16" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (34,056,221,755 samples, 0.22%)</title><rect x="22.7" y="389" width="2.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="25.67" y="399.5" ></text>
</g>
<g >
<title>walk_component (3,374,370,441 samples, 0.02%)</title><rect x="19.9" y="245" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="22.87" y="255.5" ></text>
</g>
<g >
<title>seq_read (4,597,130,589 samples, 0.03%)</title><rect x="1185.6" y="325" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1188.58" y="335.5" ></text>
</g>
<g >
<title>[git] (2,400,514,435 samples, 0.02%)</title><rect x="12.2" y="389" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="15.22" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4,768,305,022 samples, 0.03%)</title><rect x="27.1" y="309" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="30.09" y="319.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (2,442,376,250 samples, 0.02%)</title><rect x="18.1" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="21.09" y="239.5" ></text>
</g>
</g>
</svg>
