<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="854.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="837" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="837" > </text>
<g id="frames">
<g >
<title>train_one (362,503,694,906 samples, 1.41%)</title><rect x="726.0" y="757" width="16.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="728.98" y="767.5" ></text>
</g>
<g >
<title>tailscaled (336,366,738,370 samples, 1.31%)</title><rect x="114.0" y="789" width="15.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="116.97" y="799.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (102,132,718,008 samples, 0.40%)</title><rect x="79.5" y="757" width="4.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="82.47" y="767.5" ></text>
</g>
<g >
<title>runtime.mcall (2,370,495,880 samples, 0.01%)</title><rect x="15.2" y="709" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="18.17" y="719.5" ></text>
</g>
<g >
<title>read (56,784,056,672 samples, 0.22%)</title><rect x="762.0" y="773" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="764.96" y="783.5" ></text>
</g>
<g >
<title>mmput (107,338,326,587 samples, 0.42%)</title><rect x="10.1" y="693" width="5.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.14" y="703.5" ></text>
</g>
<g >
<title>run_builtin (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="709" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="81.42" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="677" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="728.60" y="687.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3,309,703,971 samples, 0.01%)</title><rect x="84.3" y="597" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="87.27" y="607.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="709" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1176.34" y="719.5" ></text>
</g>
<g >
<title>check_transhuge_cooling (7,124,484,324 samples, 0.03%)</title><rect x="66.1" y="677" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="69.15" y="687.5" ></text>
</g>
<g >
<title>move_pages_to_lru (126,727,581,966 samples, 0.49%)</title><rect x="59.4" y="693" width="5.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="62.41" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,806,310,910 samples, 0.03%)</title><rect x="78.4" y="645" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="81.42" y="655.5" ></text>
</g>
<g >
<title>runtime.selectgo (2,370,495,880 samples, 0.01%)</title><rect x="15.2" y="725" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="18.17" y="735.5" ></text>
</g>
<g >
<title>syscall.Syscall (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="597" width="15.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="117.02" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="725" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="132.49" y="735.5" ></text>
</g>
<g >
<title>established_get_first (132,240,598,736 samples, 0.51%)</title><rect x="117.1" y="405" width="6.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="120.07" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="709" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.60" y="719.5" ></text>
</g>
<g >
<title>move_to_new_page (614,223,412,268 samples, 2.38%)</title><rect x="31.1" y="661" width="28.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="34.13" y="671.5" >m..</text>
</g>
<g >
<title>GOMP_parallel (13,356,311,053 samples, 0.05%)</title><rect x="685.7" y="741" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="688.74" y="751.5" ></text>
</g>
<g >
<title>_nl_C_LC_CTYPE_tolower (152,472,288,807 samples, 0.59%)</title><rect x="755.0" y="773" width="7.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="757.98" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="693" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="763.46" y="703.5" ></text>
</g>
<g >
<title>load_balance (2,772,980,707 samples, 0.01%)</title><rect x="89.6" y="565" width="0.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="92.56" y="575.5" ></text>
</g>
<g >
<title>kill_something_info (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="693" width="1.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="80.03" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="565" width="15.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="117.02" y="575.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (77,931,356,777 samples, 0.30%)</title><rect x="88.5" y="693" width="3.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="91.54" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6,254,983,815 samples, 0.02%)</title><rect x="89.5" y="613" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="92.51" y="623.5" ></text>
</g>
<g >
<title>update_process_times (6,839,702,585 samples, 0.03%)</title><rect x="684.4" y="629" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="687.40" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="693" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="728.60" y="703.5" ></text>
</g>
<g >
<title>vfs_read (53,798,878,388 samples, 0.21%)</title><rect x="762.1" y="693" width="2.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="765.10" y="703.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*Poller).Poll (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="725" width="15.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="117.02" y="735.5" ></text>
</g>
<g >
<title>kthread (194,135,442,762 samples, 0.75%)</title><rect x="66.1" y="757" width="8.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="69.15" y="767.5" ></text>
</g>
<g >
<title>__strtok_r (8,965,918,051 samples, 0.03%)</title><rect x="758.1" y="757" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="761.13" y="767.5" ></text>
</g>
<g >
<title>hack_digit (3,088,094,321 samples, 0.01%)</title><rect x="751.9" y="741" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="754.90" y="751.5" ></text>
</g>
<g >
<title>transpose (20,754,035,542 samples, 0.08%)</title><rect x="742.6" y="757" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="745.58" y="767.5" ></text>
</g>
<g >
<title>@plt (5,975,635,924 samples, 0.02%)</title><rect x="129.8" y="773" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="132.77" y="783.5" ></text>
</g>
<g >
<title>__ieee754_exp_fma (37,238,000,818 samples, 0.14%)</title><rect x="752.0" y="773" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="755.04" y="783.5" ></text>
</g>
<g >
<title>[unknown] (8,474,131,455 samples, 0.03%)</title><rect x="129.4" y="773" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="132.38" y="783.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,962,016,455 samples, 0.05%)</title><rect x="757.6" y="757" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="760.58" y="767.5" ></text>
</g>
<g >
<title>uv__io_poll (23,252,557,069 samples, 0.09%)</title><rect x="75.8" y="661" width="1.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="78.79" y="671.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (8,919,614,384 samples, 0.03%)</title><rect x="747.4" y="757" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="750.37" y="767.5" ></text>
</g>
<g >
<title>page_mapped (3,092,289,673 samples, 0.01%)</title><rect x="65.2" y="693" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="68.21" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="597" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="607.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="581" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="78.79" y="591.5" ></text>
</g>
<g >
<title>train_one (195,715,327,995 samples, 0.76%)</title><rect x="1174.6" y="773" width="8.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1177.57" y="783.5" ></text>
</g>
<g >
<title>__mpn_mul (3,087,080,471 samples, 0.01%)</title><rect x="751.8" y="725" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="754.76" y="735.5" ></text>
</g>
<g >
<title>node (55,794,209,191 samples, 0.22%)</title><rect x="75.6" y="789" width="2.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="78.61" y="799.5" ></text>
</g>
<g >
<title>migrate_page_list (621,445,227,484 samples, 2.41%)</title><rect x="30.9" y="693" width="28.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="33.95" y="703.5" >mi..</text>
</g>
<g >
<title>__x64_sys_kill (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="709" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="80.03" y="719.5" ></text>
</g>
<g >
<title>[snapd] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="693" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="82.16" y="703.5" ></text>
</g>
<g >
<title>GOMP_atomic_start (60,905,854,253 samples, 0.24%)</title><rect x="130.0" y="773" width="2.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="133.04" y="783.5" ></text>
</g>
<g >
<title>round_and_return (32,941,962,878 samples, 0.13%)</title><rect x="722.6" y="757" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="725.56" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="69" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="79.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).parseProcNetFile (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="693" width="15.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="117.02" y="703.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (5,323,727,477 samples, 0.02%)</title><rect x="72.2" y="645" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="75.20" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="629" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="728.60" y="639.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.19 (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="629" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="708.16" y="639.5" ></text>
</g>
<g >
<title>Glob::isIgnored (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="661" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="78.61" y="671.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="677" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.60" y="687.5" ></text>
</g>
<g >
<title>dequeue_entity (3,152,339,321 samples, 0.01%)</title><rect x="84.3" y="581" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="87.28" y="591.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (8,154,285,354 samples, 0.03%)</title><rect x="63.5" y="661" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="66.51" y="671.5" ></text>
</g>
<g >
<title>migrate_page_move_mapping (2,889,358,899 samples, 0.01%)</title><rect x="51.3" y="597" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="54.32" y="607.5" ></text>
</g>
<g >
<title>dequeue_task (3,309,703,971 samples, 0.01%)</title><rect x="84.3" y="613" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="87.27" y="623.5" ></text>
</g>
<g >
<title>__sched_text_start (5,455,621,533 samples, 0.02%)</title><rect x="84.3" y="629" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="87.26" y="639.5" ></text>
</g>
<g >
<title>runtime.findRunnable (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="661" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="18.28" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="501" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="511.5" ></text>
</g>
<g >
<title>time.Sleep (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="725" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="18.28" y="735.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="581" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="20.60" y="591.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="709" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="708.16" y="719.5" ></text>
</g>
<g >
<title>uv__async_io.part.1 (22,334,078,448 samples, 0.09%)</title><rect x="75.8" y="645" width="1.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="78.79" y="655.5" ></text>
</g>
<g >
<title>cmd_record (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="693" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="81.42" y="703.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="661" width="0.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="763.46" y="671.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="741" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="116.57" y="751.5" ></text>
</g>
<g >
<title>do_epoll_wait (6,586,076,720 samples, 0.03%)</title><rect x="84.2" y="693" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="87.24" y="703.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="693" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="708.16" y="703.5" ></text>
</g>
<g >
<title>cat (111,223,873,001 samples, 0.43%)</title><rect x="10.0" y="789" width="5.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="13.01" y="799.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="661" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="728.60" y="671.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_subtree_search (3,041,435,008 samples, 0.01%)</title><rect x="20.5" y="645" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="23.50" y="655.5" ></text>
</g>
<g >
<title>demote_node (1,098,156,340,419 samples, 4.26%)</title><rect x="15.9" y="709" width="50.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="18.85" y="719.5" >demot..</text>
</g>
<g >
<title>__hrtimer_run_queues (8,040,542,461 samples, 0.03%)</title><rect x="1108.6" y="693" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1111.61" y="703.5" ></text>
</g>
<g >
<title>solve_l1r_lr (169,909,127,599 samples, 0.66%)</title><rect x="697.5" y="741" width="7.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="700.50" y="751.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (2,685,750,098 samples, 0.01%)</title><rect x="51.3" y="549" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="54.32" y="559.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (5,921,267,198 samples, 0.02%)</title><rect x="757.3" y="757" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="760.31" y="767.5" ></text>
</g>
<g >
<title>__GI_____strtoll_l_internal (68,409,622,357 samples, 0.27%)</title><rect x="747.8" y="773" width="3.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="750.77" y="783.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (2,263,254,278 samples, 0.01%)</title><rect x="92.4" y="661" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="95.44" y="671.5" ></text>
</g>
<g >
<title>kmigraterd_promotion (194,135,442,762 samples, 0.75%)</title><rect x="66.1" y="725" width="8.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="69.15" y="735.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="773" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="78.61" y="783.5" ></text>
</g>
<g >
<title>__correctly_grouped_prefixmb (2,988,823,710 samples, 0.01%)</title><rect x="709.9" y="757" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="712.91" y="767.5" ></text>
</g>
<g >
<title>mark_page_accessed (2,966,108,479 samples, 0.01%)</title><rect x="764.2" y="613" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="767.15" y="623.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="677" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="78.61" y="687.5" ></text>
</g>
<g >
<title>__GI___ioctl (8,806,310,910 samples, 0.03%)</title><rect x="78.4" y="661" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="81.42" y="671.5" ></text>
</g>
<g >
<title>napi_make_callback (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="613" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="78.79" y="623.5" ></text>
</g>
<g >
<title>idr_find (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="661" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="80.03" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,869,182,183 samples, 0.01%)</title><rect x="75.6" y="277" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="287.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (4,851,019,198 samples, 0.02%)</title><rect x="15.2" y="773" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="18.17" y="783.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (21,134,835,103 samples, 0.08%)</title><rect x="75.8" y="437" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="78.79" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="677" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="708.16" y="687.5" ></text>
</g>
<g >
<title>Watcher::fireCallbacks (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="629" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="78.79" y="639.5" ></text>
</g>
<g >
<title>security_file_permission (5,987,239,744 samples, 0.02%)</title><rect x="764.3" y="661" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="767.29" y="671.5" ></text>
</g>
<g >
<title>rcu_core_si (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="629" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="20.60" y="639.5" ></text>
</g>
<g >
<title>log@plt (5,082,746,323 samples, 0.02%)</title><rect x="720.7" y="757" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="723.67" y="767.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (8,015,383,541 samples, 0.03%)</title><rect x="30.2" y="677" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="33.17" y="687.5" ></text>
</g>
<g >
<title>InotifyBackend::start (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="741" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="78.61" y="751.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="677" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.60" y="687.5" ></text>
</g>
<g >
<title>start_secondary (625,165,148,245 samples, 2.43%)</title><rect x="84.9" y="757" width="28.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="87.94" y="767.5" >st..</text>
</g>
<g >
<title>round_and_return (5,940,570,487 samples, 0.02%)</title><rect x="764.6" y="773" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="767.56" y="783.5" ></text>
</g>
<g >
<title>[perf-3948.map] (21,573,328,354 samples, 0.08%)</title><rect x="75.8" y="453" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="78.79" y="463.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).readPoller (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="741" width="15.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="117.02" y="751.5" ></text>
</g>
<g >
<title>get_idx (2,941,258,541 samples, 0.01%)</title><rect x="23.2" y="629" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="26.21" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,869,182,183 samples, 0.01%)</title><rect x="75.6" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,912,701,294 samples, 0.03%)</title><rect x="1173.2" y="757" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1176.24" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="741" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="80.03" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="645" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.60" y="655.5" ></text>
</g>
<g >
<title>perf (10,791,057,085 samples, 0.04%)</title><rect x="78.4" y="789" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="81.42" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="85" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="95.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (32,897,283,767 samples, 0.13%)</title><rect x="762.5" y="597" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="765.51" y="607.5" ></text>
</g>
<g >
<title>_IO_fgets (2,983,424,213 samples, 0.01%)</title><rect x="705.3" y="757" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="708.28" y="767.5" ></text>
</g>
<g >
<title>update_process_times (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="613" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="708.16" y="623.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (26,208,133,158 samples, 0.10%)</title><rect x="88.6" y="661" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.64" y="671.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle (3,051,550,699 samples, 0.01%)</title><rect x="684.6" y="581" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="687.57" y="591.5" ></text>
</g>
<g >
<title>vm_normal_page (105,742,447,778 samples, 0.41%)</title><rect x="10.2" y="629" width="4.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.22" y="639.5" ></text>
</g>
<g >
<title>solve_l1r_lr (21,620,879,644 samples, 0.08%)</title><rect x="724.1" y="757" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="727.07" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="677" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="82.17" y="687.5" ></text>
</g>
<g >
<title>rmap_walk_anon (169,696,230,290 samples, 0.66%)</title><rect x="18.8" y="661" width="7.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="21.78" y="671.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (21,573,328,354 samples, 0.08%)</title><rect x="75.8" y="517" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="78.79" y="527.5" ></text>
</g>
<g >
<title>kthread (1,098,167,227,051 samples, 4.26%)</title><rect x="15.9" y="757" width="50.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="18.85" y="767.5" >kthread</text>
</g>
<g >
<title>swake_up_one (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="565" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="20.60" y="575.5" ></text>
</g>
<g >
<title>runtime.park_m (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="693" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="18.28" y="703.5" ></text>
</g>
<g >
<title>sock_poll (5,954,348,771 samples, 0.02%)</title><rect x="129.5" y="645" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="132.49" y="655.5" ></text>
</g>
<g >
<title>[perf-3948.map] (21,573,328,354 samples, 0.08%)</title><rect x="75.8" y="469" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="78.79" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="405" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="415.5" ></text>
</g>
<g >
<title>start_kernel (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="725" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="116.57" y="735.5" ></text>
</g>
<g >
<title>do_exit (107,655,212,549 samples, 0.42%)</title><rect x="10.1" y="709" width="5.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="13.14" y="719.5" ></text>
</g>
<g >
<title>cooling_node (137,582,537,597 samples, 0.53%)</title><rect x="66.1" y="709" width="6.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="69.15" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,049,342,145 samples, 0.05%)</title><rect x="1108.6" y="757" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1111.61" y="767.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (271,027,414,642 samples, 1.05%)</title><rect x="132.8" y="773" width="12.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="135.83" y="783.5" ></text>
</g>
<g >
<title>migrate_pages (618,699,223,912 samples, 2.40%)</title><rect x="30.9" y="677" width="28.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="33.95" y="687.5" >mi..</text>
</g>
<g >
<title>swake_up_locked.part.5 (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="549" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="20.60" y="559.5" ></text>
</g>
<g >
<title>__cond_resched (11,931,162,013 samples, 0.05%)</title><rect x="20.6" y="645" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="23.64" y="655.5" ></text>
</g>
<g >
<title>[snapd] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="741" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="82.16" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (56,784,056,672 samples, 0.22%)</title><rect x="762.0" y="757" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="764.96" y="767.5" ></text>
</g>
<g >
<title>arch_call_rest_init (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="709" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="116.57" y="719.5" ></text>
</g>
<g >
<title>__strtok_r (91,161,506,549 samples, 0.35%)</title><rect x="693.3" y="741" width="4.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="696.33" y="751.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,287,481,285 samples, 0.03%)</title><rect x="89.5" y="645" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="92.49" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="303.5" ></text>
</g>
<g >
<title>__strrchr_avx2 (8,957,865,745 samples, 0.03%)</title><rect x="719.4" y="757" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="722.43" y="767.5" ></text>
</g>
<g >
<title>evlist__enable (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="677" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="81.42" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="693" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1176.34" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,297,507,259 samples, 0.03%)</title><rect x="78.4" y="629" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="81.45" y="639.5" ></text>
</g>
<g >
<title>kmigraterd0 (1,098,167,227,051 samples, 4.26%)</title><rect x="15.9" y="789" width="50.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.85" y="799.5" >kmigr..</text>
</g>
<g >
<title>GOMP_parallel (13,295,310,858 samples, 0.05%)</title><rect x="146.0" y="757" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="149.02" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="533" width="15.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="117.02" y="543.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (2,989,051,764 samples, 0.01%)</title><rect x="764.0" y="597" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="767.02" y="607.5" ></text>
</g>
<g >
<title>unmap_vmas (106,629,941,311 samples, 0.41%)</title><rect x="10.2" y="661" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.18" y="671.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="741" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="728.60" y="751.5" ></text>
</g>
<g >
<title>__do_softirq (7,046,900,356 samples, 0.03%)</title><rect x="89.5" y="629" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="92.49" y="639.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="661" width="15.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="117.02" y="671.5" ></text>
</g>
<g >
<title>PageHuge (2,592,774,231 samples, 0.01%)</title><rect x="18.1" y="661" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.14" y="671.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_PushBlockContext (21,134,835,103 samples, 0.08%)</title><rect x="75.8" y="421" width="1.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="78.79" y="431.5" ></text>
</g>
<g >
<title>all (25,767,583,885,999 samples, 100%)</title><rect x="10.0" y="805" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>do_nanosleep (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="613" width="0.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="82.17" y="623.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (5,644,504,919 samples, 0.02%)</title><rect x="64.3" y="677" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="67.30" y="687.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (3,167,313,147 samples, 0.01%)</title><rect x="30.5" y="677" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="33.54" y="687.5" ></text>
</g>
<g >
<title>page_mapped (2,746,003,572 samples, 0.01%)</title><rect x="59.3" y="677" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.28" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (6,564,327,901 samples, 0.03%)</title><rect x="84.2" y="661" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="87.24" y="671.5" ></text>
</g>
<g >
<title>__mpn_lshift (23,915,038,647 samples, 0.09%)</title><rect x="753.7" y="773" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="756.75" y="783.5" ></text>
</g>
<g >
<title>make_child (2,287,796,227 samples, 0.01%)</title><rect x="75.5" y="773" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="78.49" y="783.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (9,935,996,605 samples, 0.04%)</title><rect x="1108.6" y="709" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1111.61" y="719.5" ></text>
</g>
<g >
<title>do_idle (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="661" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="116.57" y="671.5" ></text>
</g>
<g >
<title>seq_read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="469" width="15.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="117.02" y="479.5" ></text>
</g>
<g >
<title>update_process_times (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="645" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1176.34" y="655.5" ></text>
</g>
<g >
<title>exc_page_fault (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="725" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="728.60" y="735.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (335,020,680,023 samples, 1.30%)</title><rect x="114.0" y="773" width="15.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="117.02" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="341" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="351.5" ></text>
</g>
<g >
<title>start_thread (24,689,151,569 samples, 0.10%)</title><rect x="77.0" y="773" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="80.03" y="783.5" ></text>
</g>
<g >
<title>grep (3,174,034,532 samples, 0.01%)</title><rect x="15.6" y="789" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="18.61" y="799.5" ></text>
</g>
<g >
<title>up_read (8,356,101,067 samples, 0.03%)</title><rect x="26.2" y="645" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="29.17" y="655.5" ></text>
</g>
<g >
<title>unmap_single_vma (106,629,941,311 samples, 0.41%)</title><rect x="10.2" y="645" width="4.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.18" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="613" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="623.5" ></text>
</g>
<g >
<title>page_mapping (5,676,153,106 samples, 0.02%)</title><rect x="65.4" y="693" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="68.35" y="703.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2,966,108,479 samples, 0.01%)</title><rect x="764.2" y="597" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="767.15" y="607.5" ></text>
</g>
<g >
<title>schedule (6,119,621,473 samples, 0.02%)</title><rect x="84.3" y="645" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="87.26" y="655.5" ></text>
</g>
<g >
<title>PageHuge (5,764,448,688 samples, 0.02%)</title><rect x="22.8" y="629" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="25.83" y="639.5" ></text>
</g>
<g >
<title>page_anon_vma (3,002,696,544 samples, 0.01%)</title><rect x="18.6" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.64" y="671.5" ></text>
</g>
<g >
<title>sparse_operator::axpy_omp (1,407,254,704,160 samples, 5.46%)</title><rect x="1109.2" y="773" width="64.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1112.16" y="783.5" >sparse_..</text>
</g>
<g >
<title>new_sync_read (44,824,124,921 samples, 0.17%)</title><rect x="762.2" y="677" width="2.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="765.24" y="687.5" ></text>
</g>
<g >
<title>GOMP_atomic_end (13,921,340,522 samples, 0.05%)</title><rect x="145.4" y="757" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="148.38" y="767.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (86,586,981,577 samples, 0.34%)</title><rect x="705.7" y="757" width="4.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="708.69" y="767.5" ></text>
</g>
<g >
<title>wake_up_process (9,353,316,185 samples, 0.04%)</title><rect x="88.8" y="581" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="91.76" y="591.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2,709,821,710 samples, 0.01%)</title><rect x="63.4" y="661" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="66.39" y="671.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (24,993,400,294 samples, 0.10%)</title><rect x="75.8" y="725" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="78.79" y="735.5" ></text>
</g>
<g >
<title>rmap_walk (186,795,816,714 samples, 0.72%)</title><rect x="18.0" y="677" width="8.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="21.00" y="687.5" ></text>
</g>
<g >
<title>[oray_rundaemon] (2,491,509,661 samples, 0.01%)</title><rect x="78.2" y="773" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="81.23" y="783.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (15,660,190,701 samples, 0.06%)</title><rect x="88.6" y="629" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="91.64" y="639.5" ></text>
</g>
<g >
<title>memory_stat.sh (5,288,780,781 samples, 0.02%)</title><rect x="75.4" y="789" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="78.36" y="799.5" ></text>
</g>
<g >
<title>__GI___kill (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="757" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="80.03" y="767.5" ></text>
</g>
<g >
<title>main (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="741" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="81.42" y="751.5" ></text>
</g>
<g >
<title>train (23,152,168,763,888 samples, 89.85%)</title><rect x="129.8" y="789" width="1060.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="132.77" y="799.5" >train</text>
</g>
<g >
<title>established_get_first (7,924,700,415 samples, 0.03%)</title><rect x="128.8" y="389" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="131.83" y="399.5" ></text>
</g>
<g >
<title>trigger_load_balance (3,051,550,699 samples, 0.01%)</title><rect x="684.6" y="597" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="687.57" y="607.5" ></text>
</g>
<g >
<title>__strcspn_sse42 (68,558,982,871 samples, 0.27%)</title><rect x="686.4" y="741" width="3.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="689.35" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (107,655,212,549 samples, 0.42%)</title><rect x="10.1" y="757" width="5.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.14" y="767.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,987,513,723 samples, 0.01%)</title><rect x="762.1" y="645" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="765.10" y="655.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/runtime/restart/monitor.init.0.func1.1 (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="757" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="18.28" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,531,421,086 samples, 0.05%)</title><rect x="684.4" y="693" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="687.40" y="703.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (448,107,279,915 samples, 1.74%)</title><rect x="92.4" y="677" width="20.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="95.41" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="725" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.03" y="735.5" ></text>
</g>
<g >
<title>seq_read_iter (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="453" width="15.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="117.02" y="463.5" ></text>
</g>
<g >
<title>rw_verify_area (5,987,239,744 samples, 0.02%)</title><rect x="764.3" y="677" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="767.29" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (7,105,271,257 samples, 0.03%)</title><rect x="84.2" y="709" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="87.23" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="517" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2,258,262,704 samples, 0.01%)</title><rect x="10.0" y="773" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.01" y="783.5" ></text>
</g>
<g >
<title>kmigraterd_demotion (1,098,167,227,051 samples, 4.26%)</title><rect x="15.9" y="725" width="50.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="18.85" y="735.5" >kmigr..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="149" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="159.5" ></text>
</g>
<g >
<title>established_get_next (132,240,598,736 samples, 0.51%)</title><rect x="117.1" y="421" width="6.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="120.07" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="581" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="82.17" y="591.5" ></text>
</g>
<g >
<title>ret_from_fork (1,098,167,227,051 samples, 4.26%)</title><rect x="15.9" y="773" width="50.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="18.85" y="783.5" >ret_f..</text>
</g>
<g >
<title>__handle_mm_fault (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="677" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="763.46" y="687.5" ></text>
</g>
<g >
<title>established_get_next (7,924,700,415 samples, 0.03%)</title><rect x="128.8" y="405" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="131.83" y="415.5" ></text>
</g>
<g >
<title>migrate_page_copy (432,463,835,213 samples, 1.68%)</title><rect x="31.5" y="597" width="19.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="34.52" y="607.5" ></text>
</g>
<g >
<title>[snapd] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="757" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="82.16" y="767.5" ></text>
</g>
<g >
<title>rcu_core (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="613" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="20.60" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="533" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="543.5" ></text>
</g>
<g >
<title>runtime.schedule (2,193,432,293 samples, 0.01%)</title><rect x="15.2" y="677" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="18.18" y="687.5" ></text>
</g>
<g >
<title>tick_sched_timer (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="677" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1176.34" y="687.5" ></text>
</g>
<g >
<title>tcp_seq_next (198,734,500,464 samples, 0.77%)</title><rect x="114.0" y="437" width="9.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="117.02" y="447.5" ></text>
</g>
<g >
<title>_IO_getline (5,972,241,044 samples, 0.02%)</title><rect x="705.4" y="757" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="708.42" y="767.5" ></text>
</g>
<g >
<title>transpose (141,134,430,651 samples, 0.55%)</title><rect x="1183.5" y="773" width="6.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1186.54" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="373" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_migrate (3,313,744,960 samples, 0.01%)</title><rect x="51.2" y="565" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="54.16" y="575.5" ></text>
</g>
<g >
<title>percpu_ref_get_many (2,985,208,874 samples, 0.01%)</title><rect x="51.2" y="549" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="54.18" y="559.5" ></text>
</g>
<g >
<title>copy_transhuge_pginfo (6,513,776,438 samples, 0.03%)</title><rect x="59.0" y="597" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="61.96" y="607.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="741" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1176.34" y="751.5" ></text>
</g>
<g >
<title>down_read (23,417,031,572 samples, 0.09%)</title><rect x="21.5" y="645" width="1.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.47" y="655.5" ></text>
</g>
<g >
<title>tick_sched_timer (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="645" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="708.16" y="655.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="725" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="708.16" y="735.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/runtime/restart/monitor.(*monitor).run (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="741" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="18.28" y="751.5" ></text>
</g>
<g >
<title>migrate_pages (56,506,261,513 samples, 0.22%)</title><rect x="72.4" y="693" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="75.45" y="703.5" ></text>
</g>
<g >
<title>containerd (6,479,713,286 samples, 0.03%)</title><rect x="15.1" y="789" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="18.10" y="799.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,049,342,145 samples, 0.05%)</title><rect x="1108.6" y="741" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1111.61" y="751.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (15,910,820,699 samples, 0.06%)</title><rect x="88.6" y="645" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="91.64" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="629" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="639.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (11,758,712,100,083 samples, 45.63%)</title><rect x="146.6" y="757" width="538.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="149.63" y="767.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>established_get_first (66,493,901,728 samples, 0.26%)</title><rect x="114.0" y="421" width="3.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="117.02" y="431.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="709" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="78.61" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="549" width="15.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="117.02" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="645" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="82.17" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="709" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="728.60" y="719.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_first (3,092,248,753 samples, 0.01%)</title><rect x="18.4" y="661" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="21.37" y="671.5" ></text>
</g>
<g >
<title>oray_rundaemon (4,233,354,853 samples, 0.02%)</title><rect x="78.2" y="789" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="81.23" y="799.5" ></text>
</g>
<g >
<title>unix_poll (5,954,348,771 samples, 0.02%)</title><rect x="129.5" y="629" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="132.49" y="639.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="629" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="82.17" y="639.5" ></text>
</g>
<g >
<title>intel_idle (46,330,136,056 samples, 0.18%)</title><rect x="89.9" y="677" width="2.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="92.91" y="687.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3,086,623,571 samples, 0.01%)</title><rect x="764.4" y="645" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="767.42" y="655.5" ></text>
</g>
<g >
<title>ttwu_do_activate (6,217,364,389 samples, 0.02%)</title><rect x="88.9" y="549" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="91.89" y="559.5" ></text>
</g>
<g >
<title>strtok@plt (2,983,880,525 samples, 0.01%)</title><rect x="725.5" y="757" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="728.47" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_select (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="709" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="132.49" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,615,968,579 samples, 0.03%)</title><rect x="88.2" y="693" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="91.19" y="703.5" ></text>
</g>
<g >
<title>[perf-3948.map] (21,573,328,354 samples, 0.08%)</title><rect x="75.8" y="485" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="78.79" y="495.5" ></text>
</g>
<g >
<title>enqueue_entity (4,620,759,905 samples, 0.02%)</title><rect x="88.9" y="517" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="91.90" y="527.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.139 (4,662,343,544 samples, 0.02%)</title><rect x="89.5" y="597" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="92.51" y="607.5" ></text>
</g>
<g >
<title>kmigraterd (194,135,442,762 samples, 0.75%)</title><rect x="66.1" y="741" width="8.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="69.15" y="751.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_next (2,738,659,379 samples, 0.01%)</title><rect x="18.5" y="661" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="21.52" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (6,270,316,954 samples, 0.02%)</title><rect x="719.0" y="757" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="722.00" y="767.5" ></text>
</g>
<g >
<title>timekeeping_max_deferment (445,197,712,437 samples, 1.73%)</title><rect x="92.5" y="661" width="20.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="95.55" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="53" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="63.5" ></text>
</g>
<g >
<title>task_tick_fair (4,250,148,358 samples, 0.02%)</title><rect x="1108.8" y="613" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1111.79" y="623.5" ></text>
</g>
<g >
<title>@plt (11,952,085,084 samples, 0.05%)</title><rect x="685.1" y="741" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="688.11" y="751.5" ></text>
</g>
<g >
<title>handle_internal_command (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="725" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="81.42" y="735.5" ></text>
</g>
<g >
<title>cpuidle_enter (7,141,311,156 samples, 0.03%)</title><rect x="113.6" y="645" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="116.57" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="101" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="741" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.60" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="565" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="575.5" ></text>
</g>
<g >
<title>swapper (634,654,243,755 samples, 2.46%)</title><rect x="84.8" y="789" width="29.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="87.84" y="799.5" >sw..</text>
</g>
<g >
<title>@plt (2,984,726,772 samples, 0.01%)</title><rect x="145.2" y="757" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="148.24" y="767.5" ></text>
</g>
<g >
<title>[vmlinux] (107,655,212,549 samples, 0.42%)</title><rect x="10.1" y="741" width="5.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.14" y="751.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (8,921,543,490 samples, 0.03%)</title><rect x="725.1" y="757" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="728.06" y="767.5" ></text>
</g>
<g >
<title>copy_page (2,461,558,855 samples, 0.01%)</title><rect x="51.5" y="629" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.45" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="37" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="47.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,270,316,954 samples, 0.02%)</title><rect x="719.0" y="741" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="722.00" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="629" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="763.46" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="517" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.60" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,145,124,186 samples, 0.02%)</title><rect x="1108.7" y="677" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1111.70" y="687.5" ></text>
</g>
<g >
<title>[unknown] (117,148,069,503 samples, 0.45%)</title><rect x="79.4" y="773" width="5.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="82.42" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="645" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="20.60" y="655.5" ></text>
</g>
<g >
<title>perf_ioctl (6,460,395,442 samples, 0.03%)</title><rect x="78.5" y="597" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="81.50" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="629" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1176.34" y="639.5" ></text>
</g>
<g >
<title>sunloginclient (121,460,540,259 samples, 0.47%)</title><rect x="79.3" y="789" width="5.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="82.28" y="799.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2,685,750,098 samples, 0.01%)</title><rect x="51.3" y="581" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="54.32" y="591.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,531,421,086 samples, 0.05%)</title><rect x="684.4" y="709" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="687.40" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="421" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="431.5" ></text>
</g>
<g >
<title>filemap_read (44,824,124,921 samples, 0.17%)</title><rect x="762.2" y="629" width="2.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="765.24" y="639.5" ></text>
</g>
<g >
<title>get_pginfo_idx (192,305,384,574 samples, 0.75%)</title><rect x="17.7" y="693" width="8.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="20.74" y="703.5" ></text>
</g>
<g >
<title>ret_from_fork (194,135,442,762 samples, 0.75%)</title><rect x="66.1" y="773" width="8.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="69.15" y="783.5" ></text>
</g>
<g >
<title>__activate_page (2,966,108,479 samples, 0.01%)</title><rect x="764.2" y="581" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="767.15" y="591.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (61,548,342,299 samples, 0.24%)</title><rect x="23.3" y="629" width="2.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="26.35" y="639.5" ></text>
</g>
<g >
<title>clear_huge_page (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="661" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.60" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (7,974,579,420 samples, 0.03%)</title><rect x="78.4" y="613" width="0.4" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="81.45" y="623.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (21,573,328,354 samples, 0.08%)</title><rect x="75.8" y="501" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="78.79" y="511.5" ></text>
</g>
<g >
<title>read_problem (56,907,499,043 samples, 0.22%)</title><rect x="758.5" y="757" width="2.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="761.54" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="133" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="143.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="549" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="78.79" y="559.5" ></text>
</g>
<g >
<title>isolate_lru_pages.isra.16 (87,035,066,578 samples, 0.34%)</title><rect x="26.5" y="693" width="4.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.55" y="703.5" ></text>
</g>
<g >
<title>[sunloginclient] (2,193,384,894 samples, 0.01%)</title><rect x="79.3" y="757" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="82.30" y="767.5" ></text>
</g>
<g >
<title>do_group_exit (107,655,212,549 samples, 0.42%)</title><rect x="10.1" y="725" width="5.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="13.14" y="735.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2,685,750,098 samples, 0.01%)</title><rect x="51.3" y="565" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="54.32" y="575.5" ></text>
</g>
<g >
<title>epoll_wait (13,497,709,922 samples, 0.05%)</title><rect x="84.2" y="757" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="87.17" y="767.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (2,384,071,115 samples, 0.01%)</title><rect x="15.2" y="741" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="18.17" y="751.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="629" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="80.03" y="639.5" ></text>
</g>
<g >
<title>__buffer_migrate_page (443,743,898,182 samples, 1.72%)</title><rect x="31.1" y="629" width="20.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="34.13" y="639.5" ></text>
</g>
<g >
<title>schedule_idle (5,796,084,778 samples, 0.02%)</title><rect x="113.1" y="709" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="116.09" y="719.5" ></text>
</g>
<g >
<title>clear_huge_page (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="645" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="763.46" y="655.5" ></text>
</g>
<g >
<title>[snapd] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="725" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="82.16" y="735.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (22,331,135,708 samples, 0.09%)</title><rect x="62.9" y="677" width="1.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="65.86" y="687.5" ></text>
</g>
<g >
<title>runtime.park_m (2,287,056,212 samples, 0.01%)</title><rect x="15.2" y="693" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="18.18" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="437" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,414,888,449 samples, 0.03%)</title><rect x="84.2" y="741" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="87.17" y="751.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (24,993,400,294 samples, 0.10%)</title><rect x="75.8" y="693" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="78.79" y="703.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,989,051,764 samples, 0.01%)</title><rect x="764.0" y="613" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="767.02" y="623.5" ></text>
</g>
<g >
<title>isolate_lru_pages.isra.16 (119,373,124,517 samples, 0.46%)</title><rect x="66.5" y="677" width="5.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="69.47" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,869,182,183 samples, 0.01%)</title><rect x="75.6" y="245" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="255.5" ></text>
</g>
<g >
<title>strtok@plt (12,011,922,775 samples, 0.05%)</title><rect x="761.3" y="757" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="764.28" y="767.5" ></text>
</g>
<g >
<title>cpuidle_select (453,541,335,841 samples, 1.76%)</title><rect x="92.2" y="709" width="20.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="95.17" y="719.5" ></text>
</g>
<g >
<title>page_mapping (8,462,419,219 samples, 0.03%)</title><rect x="64.8" y="677" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="67.82" y="687.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (21,118,748,114 samples, 0.08%)</title><rect x="1173.6" y="773" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1176.61" y="783.5" ></text>
</g>
<g >
<title>generic_file_read_iter (44,824,124,921 samples, 0.17%)</title><rect x="762.2" y="645" width="2.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="765.24" y="655.5" ></text>
</g>
<g >
<title>__libc_start_main (24,993,400,294 samples, 0.10%)</title><rect x="75.8" y="757" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="78.79" y="767.5" ></text>
</g>
<g >
<title>available_idle_cpu (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="485" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="20.60" y="495.5" ></text>
</g>
<g >
<title>kmigraterd (1,098,167,227,051 samples, 4.26%)</title><rect x="15.9" y="741" width="50.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="18.85" y="751.5" >kmigr..</text>
</g>
<g >
<title>__anon_vma_interval_tree_subtree_search (6,148,542,014 samples, 0.02%)</title><rect x="21.2" y="629" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="24.19" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (5,820,299,616 samples, 0.02%)</title><rect x="64.6" y="677" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="67.56" y="687.5" ></text>
</g>
<g >
<title>cpu_startup_entry (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="677" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="116.57" y="687.5" ></text>
</g>
<g >
<title>os.(*File).Read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="645" width="15.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="117.02" y="655.5" ></text>
</g>
<g >
<title>cpuidle_enter (86,860,397,751 samples, 0.34%)</title><rect x="88.2" y="709" width="4.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="91.19" y="719.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,531,421,086 samples, 0.05%)</title><rect x="684.4" y="725" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="687.40" y="735.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="725" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="78.61" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (107,655,212,549 samples, 0.42%)</title><rect x="10.1" y="773" width="5.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.14" y="783.5" ></text>
</g>
<g >
<title>PageHuge (5,458,350,644 samples, 0.02%)</title><rect x="24.9" y="613" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="27.92" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="693" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="20.60" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (8,899,957,313 samples, 0.03%)</title><rect x="88.8" y="565" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="91.78" y="575.5" ></text>
</g>
<g >
<title>rest_init (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="693" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="116.57" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="357" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="367.5" ></text>
</g>
<g >
<title>dget_parent (2,987,513,723 samples, 0.01%)</title><rect x="762.1" y="661" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="765.10" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (5,842,090,364 samples, 0.02%)</title><rect x="30.7" y="693" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="33.68" y="703.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="725" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1176.34" y="735.5" ></text>
</g>
<g >
<title>scheduler_tick (6,839,702,585 samples, 0.03%)</title><rect x="684.4" y="613" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="687.40" y="623.5" ></text>
</g>
<g >
<title>exc_page_fault (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="725" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="763.46" y="735.5" ></text>
</g>
<g >
<title>__mpn_mul (3,086,753,267 samples, 0.01%)</title><rect x="754.8" y="773" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="757.84" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="213" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="549" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="559.5" ></text>
</g>
<g >
<title>migrate_page_states (432,463,835,213 samples, 1.68%)</title><rect x="31.5" y="581" width="19.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="34.52" y="591.5" ></text>
</g>
<g >
<title>find_busiest_group (2,369,313,918 samples, 0.01%)</title><rect x="89.6" y="549" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="92.58" y="559.5" ></text>
</g>
<g >
<title>select_task_rq_fair (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="501" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="20.60" y="511.5" ></text>
</g>
<g >
<title>try_to_migrate (3,787,600,624 samples, 0.01%)</title><rect x="74.9" y="677" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="77.86" y="687.5" ></text>
</g>
<g >
<title>update_min_vruntime (2,354,956,035 samples, 0.01%)</title><rect x="1108.9" y="597" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1111.87" y="607.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (7,308,092,259 samples, 0.03%)</title><rect x="113.6" y="757" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="116.57" y="767.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (11,467,028,644 samples, 0.04%)</title><rect x="62.9" y="661" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="65.86" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="661" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="20.60" y="671.5" ></text>
</g>
<g >
<title>__ieee754_log_fma (172,337,217,597 samples, 0.67%)</title><rect x="710.1" y="757" width="7.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="713.15" y="767.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (10,119,904,842 samples, 0.04%)</title><rect x="88.7" y="597" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="91.73" y="607.5" ></text>
</g>
<g >
<title>update_process_times (6,145,124,186 samples, 0.02%)</title><rect x="1108.7" y="645" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1111.70" y="655.5" ></text>
</g>
<g >
<title>omp_get_num_threads (33,272,187,257 samples, 0.13%)</title><rect x="720.9" y="757" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="723.90" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="325" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (4,829,440,626 samples, 0.02%)</title><rect x="113.1" y="693" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="116.14" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="741" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="132.49" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="645" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="78.61" y="655.5" ></text>
</g>
<g >
<title>teamviewerd (8,556,403,557 samples, 0.03%)</title><rect x="129.4" y="789" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="132.38" y="799.5" ></text>
</g>
<g >
<title>vfs_read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="501" width="15.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="117.02" y="511.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_first (6,148,542,014 samples, 0.02%)</title><rect x="21.2" y="645" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="24.19" y="655.5" ></text>
</g>
<g >
<title>unlock_page (11,610,392,145 samples, 0.05%)</title><rect x="65.6" y="693" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.61" y="703.5" ></text>
</g>
<g >
<title>check_pte (7,740,503,420 samples, 0.03%)</title><rect x="25.8" y="613" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="28.81" y="623.5" ></text>
</g>
<g >
<title>fsnotify (2,900,616,173 samples, 0.01%)</title><rect x="764.3" y="629" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="767.29" y="639.5" ></text>
</g>
<g >
<title>_perf_ioctl (5,434,372,468 samples, 0.02%)</title><rect x="78.5" y="581" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="81.54" y="591.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (92,670,095,661 samples, 0.36%)</title><rect x="743.5" y="773" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="746.53" y="783.5" ></text>
</g>
<g >
<title>established_get_first (124,770,999,964 samples, 0.48%)</title><rect x="123.1" y="405" width="5.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="126.12" y="415.5" ></text>
</g>
<g >
<title>migrate_page_list (56,506,261,513 samples, 0.22%)</title><rect x="72.4" y="709" width="2.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="75.45" y="719.5" ></text>
</g>
<g >
<title>scheduler_tick (4,250,148,358 samples, 0.02%)</title><rect x="1108.8" y="629" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1111.79" y="639.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (9,269,604,395 samples, 0.04%)</title><rect x="751.5" y="741" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="754.47" y="751.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (50,798,343,038 samples, 0.20%)</title><rect x="755.0" y="757" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="757.98" y="767.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (4,790,216,306 samples, 0.02%)</title><rect x="684.7" y="677" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="687.71" y="687.5" ></text>
</g>
<g >
<title>migrate_page_states (6,513,776,438 samples, 0.03%)</title><rect x="59.0" y="613" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="61.96" y="623.5" ></text>
</g>
<g >
<title>__strtok_r (5,970,974,325 samples, 0.02%)</title><rect x="719.8" y="757" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="722.84" y="767.5" ></text>
</g>
<g >
<title>[unknown] (25,531,495,516 samples, 0.10%)</title><rect x="75.8" y="773" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="78.78" y="783.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="661" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="708.16" y="671.5" ></text>
</g>
<g >
<title>__cond_resched (2,593,409,717 samples, 0.01%)</title><rect x="18.3" y="661" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="21.26" y="671.5" ></text>
</g>
<g >
<title>__mod_node_page_state (8,015,383,541 samples, 0.03%)</title><rect x="30.2" y="661" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="33.17" y="671.5" ></text>
</g>
<g >
<title>buffer_migrate_page (443,743,898,182 samples, 1.72%)</title><rect x="31.1" y="645" width="20.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="34.13" y="655.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (3,045,639,310 samples, 0.01%)</title><rect x="63.2" y="645" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="66.25" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2,593,214,089 samples, 0.01%)</title><rect x="23.1" y="629" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="26.10" y="639.5" ></text>
</g>
<g >
<title>rcu_all_qs (3,076,181,822 samples, 0.01%)</title><rect x="21.0" y="629" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.04" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="661" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="82.17" y="671.5" ></text>
</g>
<g >
<title>rebalance_domains (3,236,576,225 samples, 0.01%)</title><rect x="89.5" y="581" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="92.54" y="591.5" ></text>
</g>
<g >
<title>copy_page (161,504,178,793 samples, 0.63%)</title><rect x="51.6" y="613" width="7.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.57" y="623.5" ></text>
</g>
<g >
<title>[sunloginclient] (3,042,091,520 samples, 0.01%)</title><rect x="79.3" y="773" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="82.28" y="783.5" ></text>
</g>
<g >
<title>irq_enter_rcu (2,684,999,621 samples, 0.01%)</title><rect x="89.4" y="645" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="92.37" y="655.5" ></text>
</g>
<g >
<title>tcp_seq_start (133,570,630,029 samples, 0.52%)</title><rect x="123.1" y="437" width="6.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="126.12" y="447.5" ></text>
</g>
<g >
<title>schedule (2,304,934,248 samples, 0.01%)</title><rect x="79.2" y="597" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="82.17" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="485" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,414,888,449 samples, 0.03%)</title><rect x="84.2" y="725" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="87.17" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="725" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1192.60" y="735.5" ></text>
</g>
<g >
<title>__libc_start_main (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="757" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="81.42" y="767.5" ></text>
</g>
<g >
<title>copy_page_to_iter (32,897,283,767 samples, 0.13%)</title><rect x="762.5" y="613" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="765.51" y="623.5" ></text>
</g>
<g >
<title>v8::Function::Call (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="565" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="78.79" y="575.5" ></text>
</g>
<g >
<title>ps (2,962,070,798 samples, 0.01%)</title><rect x="78.9" y="789" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="81.92" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="165" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="175.5" ></text>
</g>
<g >
<title>syscall.read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="613" width="15.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="117.02" y="623.5" ></text>
</g>
<g >
<title>vfprintf (21,634,396,913 samples, 0.08%)</title><rect x="751.0" y="757" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="754.05" y="767.5" ></text>
</g>
<g >
<title>__mpn_construct_double (2,987,178,284 samples, 0.01%)</title><rect x="719.3" y="757" width="0.1" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="722.29" y="767.5" ></text>
</g>
<g >
<title>[unknown] (440,622,812,841 samples, 1.71%)</title><rect x="685.1" y="757" width="20.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="688.11" y="767.5" ></text>
</g>
<g >
<title>do_idle (624,071,741,334 samples, 2.42%)</title><rect x="85.0" y="725" width="28.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="87.99" y="735.5" >do..</text>
</g>
<g >
<title>ksys_read (53,798,878,388 samples, 0.21%)</title><rect x="762.1" y="709" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="765.10" y="719.5" ></text>
</g>
<g >
<title>readline (2,983,574,462 samples, 0.01%)</title><rect x="722.4" y="757" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="725.42" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="117" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="127.5" ></text>
</g>
<g >
<title>cooling_active_list (137,582,537,597 samples, 0.53%)</title><rect x="66.1" y="693" width="6.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="69.15" y="703.5" ></text>
</g>
<g >
<title>save_fpregs_to_fpstate (5,082,821,473 samples, 0.02%)</title><rect x="84.6" y="741" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="87.55" y="751.5" ></text>
</g>
<g >
<title>strtol@plt (2,960,032,676 samples, 0.01%)</title><rect x="761.8" y="757" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="764.83" y="767.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="693" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="78.61" y="703.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (13,356,311,053 samples, 0.05%)</title><rect x="685.7" y="725" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="688.74" y="735.5" ></text>
</g>
<g >
<title>get_pginfo_idx_one (79,228,236,884 samples, 0.31%)</title><rect x="22.5" y="645" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="25.54" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15,003,436,475 samples, 0.06%)</title><rect x="718.3" y="757" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="721.32" y="767.5" ></text>
</g>
<g >
<title>migrate_page_copy (168,017,955,231 samples, 0.65%)</title><rect x="51.6" y="629" width="7.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="54.57" y="639.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="581" width="15.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="117.02" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,839,702,585 samples, 0.03%)</title><rect x="684.4" y="661" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="687.40" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (56,784,056,672 samples, 0.22%)</title><rect x="762.0" y="741" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="764.96" y="751.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="533" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="78.79" y="543.5" ></text>
</g>
<g >
<title>__fprintf_chk (24,726,623,490 samples, 0.10%)</title><rect x="750.9" y="773" width="1.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="753.91" y="783.5" ></text>
</g>
<g >
<title>clear_huge_page (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="645" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="728.60" y="655.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (7,141,311,156 samples, 0.03%)</title><rect x="113.6" y="629" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="116.57" y="639.5" ></text>
</g>
<g >
<title>__memchr_avx2 (6,076,052,262 samples, 0.02%)</title><rect x="718.0" y="757" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="721.04" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="469" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="479.5" ></text>
</g>
<g >
<title>PageHuge (5,991,286,060 samples, 0.02%)</title><rect x="20.2" y="645" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="23.23" y="655.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).AppendListeningPorts (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="709" width="15.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="117.02" y="719.5" ></text>
</g>
<g >
<title>__GI___exp (5,436,721,856 samples, 0.02%)</title><rect x="709.7" y="757" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="712.66" y="767.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (26,566,184,716 samples, 0.10%)</title><rect x="88.6" y="677" width="1.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="91.62" y="687.5" ></text>
</g>
<g >
<title>[snapd] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="709" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="82.16" y="719.5" ></text>
</g>
<g >
<title>train (8,200,951,172 samples, 0.03%)</title><rect x="725.6" y="757" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="728.60" y="767.5" ></text>
</g>
<g >
<title>tcp_get_idx (133,570,630,029 samples, 0.52%)</title><rect x="123.1" y="421" width="6.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="126.12" y="431.5" ></text>
</g>
<g >
<title>core_sys_select (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="677" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="132.49" y="687.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="757" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.60" y="767.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.19 (5,802,522,900 samples, 0.02%)</title><rect x="1173.3" y="661" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1176.34" y="671.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (24,993,400,294 samples, 0.10%)</title><rect x="75.8" y="709" width="1.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="78.79" y="719.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,794,889,908 samples, 0.08%)</title><rect x="684.1" y="741" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="687.11" y="751.5" ></text>
</g>
<g >
<title>copy_page (8,390,704,070 samples, 0.03%)</title><rect x="31.1" y="597" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="34.13" y="607.5" ></text>
</g>
<g >
<title>nohz_run_idle_balance (3,268,581,565 samples, 0.01%)</title><rect x="112.9" y="709" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="115.94" y="719.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="597" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="20.60" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14,133,940,953 samples, 0.05%)</title><rect x="25.2" y="613" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="28.17" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="453" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="463.5" ></text>
</g>
<g >
<title>move_pages_to_lru (11,084,928,756 samples, 0.04%)</title><rect x="71.9" y="677" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="74.94" y="687.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1.1 (2,384,071,115 samples, 0.01%)</title><rect x="15.2" y="757" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="18.17" y="767.5" ></text>
</g>
<g >
<title>find_vpid (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="677" width="1.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="80.03" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,839,702,585 samples, 0.03%)</title><rect x="684.4" y="677" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="687.40" y="687.5" ></text>
</g>
<g >
<title>[unknown] (13,064,750,836,032 samples, 50.70%)</title><rect x="145.2" y="773" width="598.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="148.24" y="783.5" >[unknown]</text>
</g>
<g >
<title>common_file_perm (3,086,623,571 samples, 0.01%)</title><rect x="764.4" y="629" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="767.42" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8,672,906,774 samples, 0.03%)</title><rect x="1189.6" y="693" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.60" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2,629,315,846 samples, 0.01%)</title><rect x="79.2" y="773" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="82.16" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="181" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="191.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="677" width="15.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="117.02" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (6,564,327,901 samples, 0.03%)</title><rect x="84.2" y="677" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="87.24" y="687.5" ></text>
</g>
<g >
<title>__select (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="757" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="132.49" y="767.5" ></text>
</g>
<g >
<title>lru_add_drain (3,167,313,147 samples, 0.01%)</title><rect x="30.5" y="693" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="33.54" y="703.5" ></text>
</g>
<g >
<title>node::Start (24,993,400,294 samples, 0.10%)</title><rect x="75.8" y="741" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="78.79" y="751.5" ></text>
</g>
<g >
<title>__ieee754_exp_fma (2,219,444,791 samples, 0.01%)</title><rect x="710.0" y="757" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="713.04" y="767.5" ></text>
</g>
<g >
<title>migrate_page (52,718,660,889 samples, 0.20%)</title><rect x="72.4" y="661" width="2.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="75.45" y="671.5" ></text>
</g>
<g >
<title>node::MakeCallback (21,666,877,179 samples, 0.08%)</title><rect x="75.8" y="597" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="78.79" y="607.5" ></text>
</g>
<g >
<title>ksys_read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="517" width="15.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="117.02" y="527.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (44,824,124,921 samples, 0.17%)</title><rect x="762.2" y="661" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="765.24" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2,588,993,740 samples, 0.01%)</title><rect x="17.5" y="693" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="20.48" y="703.5" ></text>
</g>
<g >
<title>task_tick_fair (3,856,079,808 samples, 0.01%)</title><rect x="1173.3" y="613" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1176.34" y="623.5" ></text>
</g>
<g >
<title>copy_page (50,824,354,630 samples, 0.20%)</title><rect x="72.5" y="629" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="75.53" y="639.5" ></text>
</g>
<g >
<title>migrate_page_copy (52,718,660,889 samples, 0.20%)</title><rect x="72.4" y="645" width="2.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="75.45" y="655.5" ></text>
</g>
<g >
<title>exit_mmap (107,338,326,587 samples, 0.42%)</title><rect x="10.1" y="677" width="5.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.14" y="687.5" ></text>
</g>
<g >
<title>move_to_new_page (52,718,660,889 samples, 0.20%)</title><rect x="72.4" y="677" width="2.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="75.45" y="687.5" ></text>
</g>
<g >
<title>__mpn_mul (14,845,641,594 samples, 0.06%)</title><rect x="746.7" y="757" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="749.69" y="767.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="741" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="763.46" y="751.5" ></text>
</g>
<g >
<title>wake_up_process (3,092,137,730 samples, 0.01%)</title><rect x="17.6" y="533" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="20.60" y="543.5" ></text>
</g>
<g >
<title>kern_select (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="693" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="132.49" y="703.5" ></text>
</g>
<g >
<title>solve_l1r_lr (7,519,042,761,911 samples, 29.18%)</title><rect x="764.8" y="773" width="344.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="767.84" y="783.5" >solve_l1r_lr</text>
</g>
<g >
<title>rmap_walk (3,787,600,624 samples, 0.01%)</title><rect x="74.9" y="661" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="77.86" y="671.5" ></text>
</g>
<g >
<title>cpu_startup_entry (625,155,318,487 samples, 2.43%)</title><rect x="84.9" y="741" width="28.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="87.94" y="751.5" >cp..</text>
</g>
<g >
<title>radix_tree_lookup (22,458,010,651 samples, 0.09%)</title><rect x="77.0" y="645" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="80.03" y="655.5" ></text>
</g>
<g >
<title>enqueue_task_fair (4,703,408,504 samples, 0.02%)</title><rect x="88.9" y="533" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="91.89" y="543.5" ></text>
</g>
<g >
<title>calc_global_load_tick (2,706,763,590 samples, 0.01%)</title><rect x="705.2" y="597" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="708.16" y="607.5" ></text>
</g>
<g >
<title>__strspn_sse42 (83,752,804,003 samples, 0.33%)</title><rect x="689.5" y="741" width="3.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="692.49" y="751.5" ></text>
</g>
<g >
<title>do_user_addr_fault (14,911,111,298 samples, 0.06%)</title><rect x="760.5" y="709" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="763.46" y="719.5" ></text>
</g>
<g >
<title>do_select (5,978,796,083 samples, 0.02%)</title><rect x="129.5" y="661" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="132.49" y="671.5" ></text>
</g>
<g >
<title>intel_idle (4,840,382,372 samples, 0.02%)</title><rect x="113.7" y="613" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="116.68" y="623.5" ></text>
</g>
<g >
<title>runtime.schedule (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="677" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="18.28" y="687.5" ></text>
</g>
<g >
<title>migrate_page (170,479,514,086 samples, 0.66%)</title><rect x="51.5" y="645" width="7.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="54.45" y="655.5" ></text>
</g>
<g >
<title>uv_run (24,984,587,767 samples, 0.10%)</title><rect x="75.8" y="677" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="78.79" y="687.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (2,640,006,006 samples, 0.01%)</title><rect x="113.4" y="709" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="116.36" y="719.5" ></text>
</g>
<g >
<title>__fsnotify_parent (2,900,616,173 samples, 0.01%)</title><rect x="764.3" y="645" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="767.29" y="655.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (632,473,240,504 samples, 2.45%)</title><rect x="84.9" y="773" width="29.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="87.94" y="783.5" >se..</text>
</g>
<g >
<title>kmigraterd2 (194,135,442,762 samples, 0.75%)</title><rect x="66.1" y="789" width="8.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="69.15" y="799.5" ></text>
</g>
<g >
<title>strtod (2,945,289,571 samples, 0.01%)</title><rect x="761.1" y="757" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="764.14" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_read (53,798,878,388 samples, 0.21%)</title><rect x="762.1" y="725" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="765.10" y="735.5" ></text>
</g>
<g >
<title>snapd (2,807,370,782 samples, 0.01%)</title><rect x="79.2" y="789" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="82.15" y="799.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (3,277,096,820 samples, 0.01%)</title><rect x="78.6" y="565" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="81.64" y="575.5" ></text>
</g>
<g >
<title>runtime.mcall (2,346,017,248 samples, 0.01%)</title><rect x="15.3" y="709" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="18.28" y="719.5" ></text>
</g>
<g >
<title>__cond_resched (2,815,200,100 samples, 0.01%)</title><rect x="22.4" y="629" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="25.41" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,005,660,107 samples, 0.05%)</title><rect x="88.6" y="613" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="91.64" y="623.5" ></text>
</g>
<g >
<title>__mod_node_page_state (9,057,793,841 samples, 0.04%)</title><rect x="63.9" y="677" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="66.88" y="687.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9,935,996,605 samples, 0.04%)</title><rect x="1108.6" y="725" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1111.61" y="735.5" ></text>
</g>
<g >
<title>[unknown] (10,583,561,776 samples, 0.04%)</title><rect x="78.4" y="773" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.42" y="783.5" ></text>
</g>
<g >
<title>proc_reg_read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="485" width="15.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="117.02" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.19 (6,839,702,585 samples, 0.03%)</title><rect x="684.4" y="645" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="687.40" y="655.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (13,295,310,858 samples, 0.05%)</title><rect x="146.0" y="741" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="149.02" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,869,182,183 samples, 0.01%)</title><rect x="75.6" y="261" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="271.5" ></text>
</g>
<g >
<title>__fsnotify_parent (2,987,513,723 samples, 0.01%)</title><rect x="762.1" y="677" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="765.10" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,458,768,815 samples, 0.01%)</title><rect x="75.6" y="197" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="207.5" ></text>
</g>
<g >
<title>fputc (6,182,279,116 samples, 0.02%)</title><rect x="720.4" y="757" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="723.38" y="767.5" ></text>
</g>
<g >
<title>fgets@plt (5,976,130,808 samples, 0.02%)</title><rect x="720.1" y="757" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="723.11" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="78.63" y="319.5" ></text>
</g>
<g >
<title>menu_select (453,465,058,898 samples, 1.76%)</title><rect x="92.2" y="693" width="20.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="95.17" y="703.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.19 (6,145,124,186 samples, 0.02%)</title><rect x="1108.7" y="661" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1111.70" y="671.5" ></text>
</g>
<g >
<title>rmap_walk_anon (3,787,600,624 samples, 0.01%)</title><rect x="74.9" y="645" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="77.86" y="655.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="629" width="15.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="117.02" y="639.5" ></text>
</g>
<g >
<title>__isolate_lru_page_prepare (7,980,230,372 samples, 0.03%)</title><rect x="29.8" y="677" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="32.80" y="687.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (3,681,828,545 samples, 0.01%)</title><rect x="75.6" y="757" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="78.61" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3,273,304,146 samples, 0.01%)</title><rect x="75.6" y="581" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="78.63" y="591.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).Start.func1.1 (334,999,996,162 samples, 1.30%)</title><rect x="114.0" y="757" width="15.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="117.02" y="767.5" ></text>
</g>
<g >
<title>migrate_page (443,743,898,182 samples, 1.72%)</title><rect x="31.1" y="613" width="20.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="34.13" y="623.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,323,727,477 samples, 0.02%)</title><rect x="72.2" y="661" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="75.20" y="671.5" ></text>
</g>
</g>
</svg>
