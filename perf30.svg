<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>cpuidle_select (2,087,111,823 samples, 0.01%)</title><rect x="1187.9" y="357" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.86" y="367.5" ></text>
</g>
<g >
<title>link_path_walk.part.33 (3,396,892,706 samples, 0.02%)</title><rect x="1121.0" y="245" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1124.00" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,134,790,556 samples, 0.07%)</title><rect x="1186.2" y="325" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1189.16" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (3,163,670,386 samples, 0.02%)</title><rect x="1182.0" y="341" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1184.95" y="351.5" ></text>
</g>
<g >
<title>start_thread (1,798,521,300 samples, 0.01%)</title><rect x="1185.4" y="421" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.42" y="431.5" ></text>
</g>
<g >
<title>page_anon_vma (1,867,078,103 samples, 0.01%)</title><rect x="1150.1" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1153.15" y="303.5" ></text>
</g>
<g >
<title>down_read (40,298,191,720 samples, 0.25%)</title><rect x="1137.2" y="293" width="2.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1140.19" y="303.5" ></text>
</g>
<g >
<title>bufio.(*Reader).fill (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="309" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1191.49" y="319.5" ></text>
</g>
<g >
<title>established_get_first (7,651,600,082 samples, 0.05%)</title><rect x="1189.0" y="37" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.97" y="47.5" ></text>
</g>
<g >
<title>get_idx (5,238,166,708 samples, 0.03%)</title><rect x="1141.9" y="277" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1144.90" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (4,304,648,036 samples, 0.03%)</title><rect x="1175.9" y="293" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1178.91" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,769,555,790 samples, 0.10%)</title><rect x="1100.3" y="373" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1103.34" y="383.5" ></text>
</g>
<g >
<title>__isolate_lru_page_prepare (13,432,598,213 samples, 0.08%)</title><rect x="1161.7" y="325" width="1.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1164.70" y="335.5" ></text>
</g>
<g >
<title>get_pginfo_idx_one (1,555,856,212 samples, 0.01%)</title><rect x="1131.4" y="309" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1134.43" y="319.5" ></text>
</g>
<g >
<title>rmap_walk_anon (274,615,063,089 samples, 1.68%)</title><rect x="1132.0" y="309" width="19.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1135.03" y="319.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).parseProcNetFile (14,980,757,913 samples, 0.09%)</title><rect x="1188.5" y="341" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.49" y="351.5" ></text>
</g>
<g >
<title>node::Start (1,432,918,847 samples, 0.01%)</title><rect x="1185.1" y="389" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1188.09" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (865,542,053,469 samples, 5.29%)</title><rect x="1122.3" y="421" width="62.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1125.35" y="431.5" >ret_fr..</text>
</g>
<g >
<title>established_get_first (1,820,454,998 samples, 0.01%)</title><rect x="1188.8" y="53" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.84" y="63.5" ></text>
</g>
<g >
<title>__mod_node_page_state (10,009,561,495 samples, 0.06%)</title><rect x="1176.2" y="309" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1179.22" y="319.5" ></text>
</g>
<g >
<title>vfs_statx (13,562,408,284 samples, 0.08%)</title><rect x="1120.9" y="309" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1123.87" y="319.5" ></text>
</g>
<g >
<title>__GI___readlink (3,374,514,756 samples, 0.02%)</title><rect x="1189.6" y="405" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.62" y="415.5" ></text>
</g>
<g >
<title>rebalance_domains (3,218,325,561 samples, 0.02%)</title><rect x="1186.7" y="229" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1189.66" y="239.5" ></text>
</g>
<g >
<title>PageHuge (6,638,518,863 samples, 0.04%)</title><rect x="1135.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1138.36" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (2,867,075,626 samples, 0.02%)</title><rect x="1120.1" y="325" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1123.07" y="335.5" ></text>
</g>
<g >
<title>[git] (4,208,914,761 samples, 0.03%)</title><rect x="1120.4" y="421" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1123.43" y="431.5" ></text>
</g>
<g >
<title>seq_read (14,910,345,062 samples, 0.09%)</title><rect x="1188.5" y="117" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1191.49" y="127.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (1,432,713,723 samples, 0.01%)</title><rect x="1185.1" y="341" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1188.09" y="351.5" ></text>
</g>
<g >
<title>swapper (34,323,687,064 samples, 0.21%)</title><rect x="1186.0" y="437" width="2.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1189.00" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (3,008,092,061 samples, 0.02%)</title><rect x="1139.7" y="277" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1142.74" y="287.5" ></text>
</g>
<g >
<title>tailscale.com/portlist.(*linuxImpl).AppendListeningPorts (14,980,831,853 samples, 0.09%)</title><rect x="1188.5" y="357" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.49" y="367.5" ></text>
</g>
<g >
<title>tick_program_event (1,574,660,532 samples, 0.01%)</title><rect x="1101.3" y="325" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1104.31" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (6,119,919,860 samples, 0.04%)</title><rect x="1127.3" y="341" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1130.33" y="351.5" ></text>
</g>
<g >
<title>inode_permission (1,407,483,236 samples, 0.01%)</title><rect x="1121.1" y="229" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1124.06" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (15,454,172,782 samples, 0.09%)</title><rect x="1100.3" y="357" width="1.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1103.34" y="367.5" ></text>
</g>
<g >
<title>proc_reg_read (14,910,345,062 samples, 0.09%)</title><rect x="1188.5" y="133" width="1.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1191.49" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5,870,154,475 samples, 0.04%)</title><rect x="1186.6" y="293" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1189.60" y="303.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.139 (4,317,300,952 samples, 0.03%)</title><rect x="1186.6" y="245" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1189.62" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (1,579,185,194 samples, 0.01%)</title><rect x="1188.1" y="341" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1191.09" y="351.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_first (6,327,059,628 samples, 0.04%)</title><rect x="1130.7" y="309" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1133.74" y="319.5" ></text>
</g>
<g >
<title>established_get_next (7,651,600,082 samples, 0.05%)</title><rect x="1189.0" y="53" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.97" y="63.5" ></text>
</g>
<g >
<title>rmap_walk (3,215,514,320 samples, 0.02%)</title><rect x="1182.2" y="341" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1185.18" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_newlstat (13,695,960,628 samples, 0.08%)</title><rect x="1120.9" y="341" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1123.86" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (50,432,218,113 samples, 0.31%)</title><rect x="1105.9" y="389" width="3.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1108.88" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,075,983,379 samples, 0.02%)</title><rect x="1189.6" y="373" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2,384,775,007 samples, 0.01%)</title><rect x="1100.7" y="245" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1103.68" y="255.5" ></text>
</g>
<g >
<title>lru_add_drain (1,815,216,014 samples, 0.01%)</title><rect x="1163.7" y="341" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1166.74" y="351.5" ></text>
</g>
<g >
<title>lookup_fast (3,818,083,263 samples, 0.02%)</title><rect x="1121.2" y="229" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1124.24" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="197" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.49" y="207.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (1,432,918,847 samples, 0.01%)</title><rect x="1185.1" y="373" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1188.09" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,571,276,873 samples, 0.03%)</title><rect x="1186.2" y="261" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1189.16" y="271.5" ></text>
</g>
<g >
<title>PageHuge (3,476,006,954 samples, 0.02%)</title><rect x="1130.3" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1133.27" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2,281,988,774 samples, 0.01%)</title><rect x="1177.2" y="325" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1180.18" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (2,281,994,515 samples, 0.01%)</title><rect x="1128.6" y="341" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1131.55" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,131,016,454 samples, 0.07%)</title><rect x="1186.2" y="309" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1189.16" y="319.5" ></text>
</g>
<g >
<title>user_path_at_empty (8,873,043,770 samples, 0.05%)</title><rect x="1121.0" y="293" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1123.97" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (50,535,459,149 samples, 0.31%)</title><rect x="1105.9" y="405" width="3.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1108.88" y="415.5" ></text>
</g>
<g >
<title>tailscaled (15,229,167,167 samples, 0.09%)</title><rect x="1188.5" y="437" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1191.47" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="389" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1124.96" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (8,235,857,255 samples, 0.05%)</title><rect x="1100.6" y="261" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1103.61" y="271.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (10,995,146,448 samples, 0.07%)</title><rect x="1162.7" y="325" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1165.67" y="335.5" ></text>
</g>
<g >
<title>get_pginfo_idx (2,074,527,166 samples, 0.01%)</title><rect x="1184.4" y="357" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1187.43" y="367.5" ></text>
</g>
<g >
<title>unlock_page (27,487,551,517 samples, 0.17%)</title><rect x="1182.4" y="341" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1185.41" y="351.5" ></text>
</g>
<g >
<title>gnome-shell (1,615,051,464 samples, 0.01%)</title><rect x="1122.1" y="437" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1125.14" y="447.5" ></text>
</g>
<g >
<title>isolate_lru_pages.isra.16 (162,385,126,791 samples, 0.99%)</title><rect x="1152.0" y="341" width="11.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1155.03" y="351.5" ></text>
</g>
<g >
<title>ksys_read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="165" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1191.49" y="175.5" ></text>
</g>
<g >
<title>syscall.Syscall (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="245" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1191.49" y="255.5" ></text>
</g>
<g >
<title>up_read (15,766,388,016 samples, 0.10%)</title><rect x="1150.7" y="293" width="1.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1153.70" y="303.5" ></text>
</g>
<g >
<title>__cond_resched (3,008,057,151 samples, 0.02%)</title><rect x="1130.5" y="309" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1133.52" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (12,554,940,392 samples, 0.08%)</title><rect x="1175.3" y="309" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1178.31" y="319.5" ></text>
</g>
<g >
<title>page_mapping (27,651,059,423 samples, 0.17%)</title><rect x="1179.9" y="341" width="2.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1182.93" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,075,983,379 samples, 0.02%)</title><rect x="1189.6" y="389" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>node (6,437,975,072 samples, 0.04%)</title><rect x="1185.1" y="437" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1188.09" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,336,748,618 samples, 0.03%)</title><rect x="1186.2" y="293" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1189.16" y="303.5" ></text>
</g>
<g >
<title>__cond_resched (5,860,551,713 samples, 0.04%)</title><rect x="1135.9" y="293" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1138.93" y="303.5" ></text>
</g>
<g >
<title>run_history_based_simulation._omp_fn.1 (142,296,856,965 samples, 0.87%)</title><rect x="1109.7" y="421" width="10.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1112.68" y="431.5" ></text>
</g>
<g >
<title>__mod_node_page_state (7,053,513,313 samples, 0.04%)</title><rect x="1162.9" y="309" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1165.93" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (2,319,118,271 samples, 0.01%)</title><rect x="1186.7" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1189.72" y="207.5" ></text>
</g>
<g >
<title>schedule_idle (1,879,810,399 samples, 0.01%)</title><rect x="1188.1" y="357" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1191.09" y="367.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (33,784,938,181 samples, 0.21%)</title><rect x="1186.0" y="421" width="2.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1189.03" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,731,744,224 samples, 0.08%)</title><rect x="1120.9" y="373" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1123.86" y="383.5" ></text>
</g>
<g >
<title>page_anon_vma (6,742,201,767 samples, 0.04%)</title><rect x="1131.5" y="309" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1134.54" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (23,805,098,043 samples, 0.15%)</title><rect x="1147.1" y="261" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1150.08" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (5,082,616,329 samples, 0.03%)</title><rect x="1128.2" y="341" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1131.17" y="351.5" ></text>
</g>
<g >
<title>containerd (4,168,959,679 samples, 0.03%)</title><rect x="1120.0" y="437" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1123.00" y="447.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (7,260,751,937 samples, 0.04%)</title><rect x="1177.6" y="325" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1180.63" y="335.5" ></text>
</g>
<g >
<title>teamviewerd (4,311,126,208 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.57" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,389,169,201 samples, 0.01%)</title><rect x="1186.2" y="213" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1189.17" y="223.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (2,242,539,511 samples, 0.01%)</title><rect x="1109.5" y="421" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1112.52" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,695,960,628 samples, 0.08%)</title><rect x="1120.9" y="357" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1123.86" y="367.5" ></text>
</g>
<g >
<title>start_secondary (32,736,337,687 samples, 0.20%)</title><rect x="1186.0" y="405" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1189.03" y="415.5" ></text>
</g>
<g >
<title>do_readlinkat (3,075,983,379 samples, 0.02%)</title><rect x="1189.6" y="341" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.64" y="351.5" ></text>
</g>
<g >
<title>__anon_vma_interval_tree_subtree_search (8,557,394,464 samples, 0.05%)</title><rect x="1136.6" y="277" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1139.58" y="287.5" ></text>
</g>
<g >
<title>git (23,602,277,754 samples, 0.14%)</title><rect x="1120.4" y="437" width="1.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1123.43" y="447.5" ></text>
</g>
<g >
<title>rcu_all_qs (1,867,043,353 samples, 0.01%)</title><rect x="1140.0" y="277" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1142.97" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.19 (9,761,329,043 samples, 0.06%)</title><rect x="1100.5" y="293" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1103.50" y="303.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (15,194,517,409 samples, 0.09%)</title><rect x="1188.5" y="421" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.48" y="431.5" ></text>
</g>
<g >
<title>vfs_getattr (3,337,228,624 samples, 0.02%)</title><rect x="1121.6" y="293" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1124.61" y="303.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).readPoller (15,036,744,902 samples, 0.09%)</title><rect x="1188.5" y="389" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1191.49" y="399.5" ></text>
</g>
<g >
<title>move_to_new_page (38,335,884,669 samples, 0.23%)</title><rect x="1164.1" y="309" width="2.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1167.12" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="213" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.49" y="223.5" ></text>
</g>
<g >
<title>cpu_startup_entry (32,722,266,306 samples, 0.20%)</title><rect x="1186.0" y="389" width="2.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.03" y="399.5" ></text>
</g>
<g >
<title>get_pginfo_idx_one (137,384,692,392 samples, 0.84%)</title><rect x="1140.2" y="293" width="9.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1143.24" y="303.5" ></text>
</g>
<g >
<title>filename_lookup (2,006,759,010 samples, 0.01%)</title><rect x="1189.6" y="309" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1192.64" y="319.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2,420,940,895 samples, 0.01%)</title><rect x="1186.2" y="245" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.17" y="255.5" ></text>
</g>
<g >
<title>kmigraterd (865,542,053,469 samples, 5.29%)</title><rect x="1122.3" y="389" width="62.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1125.35" y="399.5" >kmigra..</text>
</g>
<g >
<title>calculate_macro_xs (4,718,934,330 samples, 0.03%)</title><rect x="1101.7" y="421" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1104.70" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_newlstat (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="373" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1124.96" y="383.5" ></text>
</g>
<g >
<title>demote_node (858,281,333,925 samples, 5.25%)</title><rect x="1122.5" y="357" width="61.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1125.50" y="367.5" >demote..</text>
</g>
<g >
<title>tailscale.com/portlist.(*Poller).Poll (14,980,831,853 samples, 0.09%)</title><rect x="1188.5" y="373" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.49" y="383.5" ></text>
</g>
<g >
<title>wake_up_process (2,410,301,036 samples, 0.01%)</title><rect x="1186.2" y="229" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1189.17" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (50,432,218,113 samples, 0.31%)</title><rect x="1105.9" y="341" width="3.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1108.88" y="351.5" ></text>
</g>
<g >
<title>tcp_get_idx (9,585,219,312 samples, 0.06%)</title><rect x="1188.8" y="69" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.84" y="79.5" ></text>
</g>
<g >
<title>runtime.selectgo (2,961,752,488 samples, 0.02%)</title><rect x="1120.1" y="373" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1123.06" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_readlink (3,075,983,379 samples, 0.02%)</title><rect x="1189.6" y="357" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1192.64" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,088,284,858 samples, 0.12%)</title><rect x="1100.1" y="389" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1103.10" y="399.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1,555,896,788 samples, 0.01%)</title><rect x="1179.3" y="325" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1182.28" y="335.5" ></text>
</g>
<g >
<title>PageHuge (5,808,694,194 samples, 0.04%)</title><rect x="1146.7" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1149.67" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (39,056,185,926 samples, 0.24%)</title><rect x="1164.1" y="325" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1167.10" y="335.5" ></text>
</g>
<g >
<title>check_pte (18,567,092,801 samples, 0.11%)</title><rect x="1148.8" y="261" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1151.81" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="181" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.49" y="191.5" ></text>
</g>
<g >
<title>path_lookupat (2,006,759,010 samples, 0.01%)</title><rect x="1189.6" y="293" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1192.64" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,452,185,001 samples, 0.01%)</title><rect x="1141.7" y="277" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1144.71" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,628,061,830 samples, 0.07%)</title><rect x="1100.4" y="325" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1103.37" y="335.5" ></text>
</g>
<g >
<title>runtime.findRunnable (2,538,697,847 samples, 0.02%)</title><rect x="1120.1" y="309" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1123.07" y="319.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadSlice (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="325" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.49" y="335.5" ></text>
</g>
<g >
<title>[unknown] (4,127,793,832 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1192.57" y="431.5" ></text>
</g>
<g >
<title>rmap_walk_anon (1,400,315,571 samples, 0.01%)</title><rect x="1151.9" y="325" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1154.93" y="335.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="277" width="1.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1191.49" y="287.5" ></text>
</g>
<g >
<title>path_lookupat (7,649,445,031 samples, 0.05%)</title><rect x="1121.0" y="261" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1123.97" y="271.5" ></text>
</g>
<g >
<title>uv_run (1,432,611,766 samples, 0.01%)</title><rect x="1185.1" y="325" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1188.09" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (3,993,469,607 samples, 0.02%)</title><rect x="1177.3" y="325" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1180.34" y="335.5" ></text>
</g>
<g >
<title>walk_component (3,826,545,329 samples, 0.02%)</title><rect x="1121.2" y="245" width="0.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1124.24" y="255.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (3,083,255,941 samples, 0.02%)</title><rect x="1121.6" y="277" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1124.62" y="287.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (109,119,367,399 samples, 0.67%)</title><rect x="1142.3" y="277" width="7.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1145.28" y="287.5" ></text>
</g>
<g >
<title>runtime.park_m (2,878,662,571 samples, 0.02%)</title><rect x="1120.1" y="341" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1123.07" y="351.5" ></text>
</g>
<g >
<title>all (16,361,513,416,146 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>clockevents_program_event (1,470,949,538 samples, 0.01%)</title><rect x="1101.3" y="309" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1104.32" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (23,764,090,722 samples, 0.15%)</title><rect x="1186.1" y="341" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1189.11" y="351.5" ></text>
</g>
<g >
<title>page_mapped (4,667,708,339 samples, 0.03%)</title><rect x="1179.6" y="341" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1182.59" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,049,131,081 samples, 0.01%)</title><rect x="1185.1" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1188.09" y="431.5" ></text>
</g>
<g >
<title>menu_select (2,067,654,842 samples, 0.01%)</title><rect x="1187.9" y="341" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.86" y="351.5" ></text>
</g>
<g >
<title>syscall.read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="261" width="1.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1191.49" y="271.5" ></text>
</g>
<g >
<title>PageHuge (4,823,271,354 samples, 0.03%)</title><rect x="1141.4" y="277" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1144.36" y="287.5" ></text>
</g>
<g >
<title>os.(*File).Read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="293" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1191.49" y="303.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (1,769,038,182 samples, 0.01%)</title><rect x="1185.4" y="405" width="0.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1188.42" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (50,432,218,113 samples, 0.31%)</title><rect x="1105.9" y="357" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1108.88" y="367.5" ></text>
</g>
<g >
<title>double_compare (1,859,653,792 samples, 0.01%)</title><rect x="1102.0" y="421" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1105.04" y="431.5" ></text>
</g>
<g >
<title>[unknown] (14,875,696,710 samples, 0.09%)</title><rect x="1120.8" y="405" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1123.77" y="415.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="229" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.49" y="239.5" ></text>
</g>
<g >
<title>XSBench (15,390,075,980,887 samples, 94.06%)</title><rect x="10.0" y="437" width="1110.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.03" y="447.5" >XSBench</text>
</g>
<g >
<title>vfs_read (14,911,034,262 samples, 0.09%)</title><rect x="1188.5" y="149" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1191.49" y="159.5" ></text>
</g>
<g >
<title>rcu_all_qs (1,452,173,702 samples, 0.01%)</title><rect x="1139.9" y="261" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1142.85" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (50,432,218,113 samples, 0.31%)</title><rect x="1105.9" y="373" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1108.88" y="383.5" ></text>
</g>
<g >
<title>update_curr (1,451,919,722 samples, 0.01%)</title><rect x="1100.9" y="229" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1103.94" y="239.5" ></text>
</g>
<g >
<title>cpuidle_enter (24,870,778,121 samples, 0.15%)</title><rect x="1186.1" y="357" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1189.06" y="367.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (50,432,218,113 samples, 0.31%)</title><rect x="1105.9" y="325" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1108.88" y="335.5" ></text>
</g>
<g >
<title>get_pginfo_idx (323,315,389,323 samples, 1.98%)</title><rect x="1128.7" y="341" width="23.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1131.72" y="351.5" >g..</text>
</g>
<g >
<title>ext4_file_getattr (3,068,862,416 samples, 0.02%)</title><rect x="1121.6" y="261" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1124.63" y="271.5" ></text>
</g>
<g >
<title>workingset_age_nonresident (2,593,215,405 samples, 0.02%)</title><rect x="1179.4" y="325" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1182.39" y="335.5" ></text>
</g>
<g >
<title>user_path_at_empty (2,006,759,010 samples, 0.01%)</title><rect x="1189.6" y="325" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.64" y="335.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="357" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1124.96" y="367.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2,004,652,794 samples, 0.01%)</title><rect x="1186.2" y="197" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1189.18" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (35,374,687,884 samples, 0.22%)</title><rect x="1174.6" y="325" width="2.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1177.63" y="335.5" ></text>
</g>
<g >
<title>vfs_statx (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="341" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1124.96" y="351.5" ></text>
</g>
<g >
<title>__libc_start_main (1,432,918,847 samples, 0.01%)</title><rect x="1185.1" y="405" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1188.09" y="415.5" ></text>
</g>
<g >
<title>runtime.mcall (2,883,690,230 samples, 0.02%)</title><rect x="1120.1" y="357" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1123.07" y="367.5" ></text>
</g>
<g >
<title>established_get_first (2,517,260,613 samples, 0.02%)</title><rect x="1188.5" y="69" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.52" y="79.5" ></text>
</g>
<g >
<title>migrate_page_copy (38,076,551,837 samples, 0.23%)</title><rect x="1164.1" y="277" width="2.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1167.14" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2,437,584,585 samples, 0.01%)</title><rect x="1127.2" y="341" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1130.16" y="351.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (2,696,875,327 samples, 0.02%)</title><rect x="1150.3" y="293" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1153.28" y="303.5" ></text>
</g>
<g >
<title>rmap_walk (308,430,735,783 samples, 1.89%)</title><rect x="1129.7" y="325" width="22.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1132.69" y="335.5" >r..</text>
</g>
<g >
<title>page_mapping (10,580,306,799 samples, 0.06%)</title><rect x="1178.5" y="325" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1181.52" y="335.5" ></text>
</g>
<g >
<title>tcp_seq_next (4,462,903,812 samples, 0.03%)</title><rect x="1188.5" y="85" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1191.52" y="95.5" ></text>
</g>
<g >
<title>migrate_page_list (40,352,766,590 samples, 0.25%)</title><rect x="1164.0" y="341" width="2.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1167.03" y="351.5" ></text>
</g>
<g >
<title>filename_lookup (7,649,445,031 samples, 0.05%)</title><rect x="1121.0" y="277" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1123.97" y="287.5" ></text>
</g>
<g >
<title>update_process_times (9,709,477,533 samples, 0.06%)</title><rect x="1100.5" y="277" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1103.50" y="287.5" ></text>
</g>
<g >
<title>ext4_getattr (2,273,617,913 samples, 0.01%)</title><rect x="1121.7" y="245" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1124.68" y="255.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (5,497,518,429 samples, 0.03%)</title><rect x="1127.8" y="341" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1130.78" y="351.5" ></text>
</g>
<g >
<title>__do_softirq (5,789,111,456 samples, 0.04%)</title><rect x="1186.6" y="277" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.60" y="287.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (13,695,960,628 samples, 0.08%)</title><rect x="1120.9" y="325" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1123.86" y="335.5" ></text>
</g>
<g >
<title>copy_page (37,090,881,648 samples, 0.23%)</title><rect x="1164.2" y="261" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1167.19" y="271.5" ></text>
</g>
<g >
<title>main (101,551,284,493 samples, 0.62%)</title><rect x="1102.2" y="421" width="7.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1105.20" y="431.5" ></text>
</g>
<g >
<title>__isolate_lru_page_prepare (2,489,449,963 samples, 0.02%)</title><rect x="1126.9" y="341" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1129.93" y="351.5" ></text>
</g>
<g >
<title>get_idx (1,918,939,543 samples, 0.01%)</title><rect x="1140.1" y="293" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1143.10" y="303.5" ></text>
</g>
<g >
<title>tailscale.com/ipn/ipnlocal.(*LocalBackend).Start.func1.gowrap1 (15,036,744,902 samples, 0.09%)</title><rect x="1188.5" y="405" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1191.49" y="415.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_next (2,022,648,471 samples, 0.01%)</title><rect x="1131.2" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1134.19" y="319.5" ></text>
</g>
<g >
<title>rcu_all_qs (3,059,923,659 samples, 0.02%)</title><rect x="1150.5" y="293" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1153.48" y="303.5" ></text>
</g>
<g >
<title>seq_read_iter (14,910,345,062 samples, 0.09%)</title><rect x="1188.5" y="101" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1191.49" y="111.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2,333,879,491 samples, 0.01%)</title><rect x="1163.5" y="325" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1166.50" y="335.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (3,425,229,124 samples, 0.02%)</title><rect x="1120.1" y="421" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1123.05" y="431.5" ></text>
</g>
<g >
<title>[unknown] (16,582,926,965 samples, 0.10%)</title><rect x="1120.7" y="421" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1123.74" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,831,914,493 samples, 0.09%)</title><rect x="1100.4" y="341" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1103.36" y="351.5" ></text>
</g>
<g >
<title>calculate_macro_xs (15,122,570,280,128 samples, 92.43%)</title><rect x="11.0" y="405" width="1090.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="14.00" y="415.5" >calculate_macro_xs</text>
</g>
<g >
<title>move_pages_to_lru (175,251,600,983 samples, 1.07%)</title><rect x="1166.9" y="341" width="12.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1169.94" y="351.5" ></text>
</g>
<g >
<title>run_history_based_simulation._omp_fn.1 (12,082,607,485 samples, 0.07%)</title><rect x="10.1" y="389" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.13" y="399.5" ></text>
</g>
<g >
<title>load_balance (2,730,269,896 samples, 0.02%)</title><rect x="1186.7" y="213" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1189.70" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5,011,067,291 samples, 0.03%)</title><rect x="1186.6" y="261" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1189.62" y="271.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (1,432,918,847 samples, 0.01%)</title><rect x="1185.1" y="357" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1188.09" y="367.5" ></text>
</g>
<g >
<title>kmigraterd0 (865,542,053,469 samples, 5.29%)</title><rect x="1122.3" y="437" width="62.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1125.35" y="447.5" >kmigra..</text>
</g>
<g >
<title>__lxstat64 (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1124.96" y="431.5" ></text>
</g>
<g >
<title>clear_page_erms (47,901,496,307 samples, 0.29%)</title><rect x="1105.9" y="293" width="3.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1108.95" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,214,239,368 samples, 0.03%)</title><rect x="1186.2" y="277" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1189.16" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (3,809,755,843 samples, 0.02%)</title><rect x="1121.2" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1124.24" y="223.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.init.0.func1.1 (3,119,288,429 samples, 0.02%)</title><rect x="1120.1" y="405" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1123.05" y="415.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3,215,551,306 samples, 0.02%)</title><rect x="1162.7" y="309" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1165.70" y="319.5" ></text>
</g>
<g >
<title>intel_idle (10,402,728,575 samples, 0.06%)</title><rect x="1187.0" y="325" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1190.03" y="335.5" ></text>
</g>
<g >
<title>generic_permission (1,391,632,634 samples, 0.01%)</title><rect x="1121.1" y="213" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1124.06" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (5,030,703,853 samples, 0.03%)</title><rect x="1178.2" y="325" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1181.16" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1,763,333,678 samples, 0.01%)</title><rect x="1163.9" y="341" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1166.90" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (3,578,576,270 samples, 0.02%)</title><rect x="1136.1" y="277" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1139.10" y="287.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.147 (2,078,907,815 samples, 0.01%)</title><rect x="1186.7" y="181" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1189.74" y="191.5" ></text>
</g>
<g >
<title>kmigraterd_demotion (865,542,053,469 samples, 5.29%)</title><rect x="1122.3" y="373" width="62.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1125.35" y="383.5" >kmigra..</text>
</g>
<g >
<title>clear_huge_page (49,036,204,410 samples, 0.30%)</title><rect x="1105.9" y="309" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1108.92" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (3,651,494,905 samples, 0.02%)</title><rect x="1100.8" y="245" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1103.85" y="255.5" ></text>
</g>
<g >
<title>kthread (865,542,053,469 samples, 5.29%)</title><rect x="1122.3" y="405" width="62.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1125.35" y="415.5" >kthread</text>
</g>
<g >
<title>entry_SYSCALL_64 (1,649,169,146 samples, 0.01%)</title><rect x="1122.0" y="405" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1124.96" y="415.5" ></text>
</g>
<g >
<title>do_idle (32,611,131,401 samples, 0.20%)</title><rect x="1186.0" y="373" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1189.04" y="383.5" ></text>
</g>
<g >
<title>__lxstat64 (13,754,341,464 samples, 0.08%)</title><rect x="1120.9" y="389" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1123.86" y="399.5" ></text>
</g>
<g >
<title>migrate_page (38,076,551,837 samples, 0.23%)</title><rect x="1164.1" y="293" width="2.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1167.14" y="303.5" ></text>
</g>
<g >
<title>github.com/containerd/containerd/gc/scheduler.(*gcScheduler).run (3,119,288,429 samples, 0.02%)</title><rect x="1120.1" y="389" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1123.05" y="399.5" ></text>
</g>
<g >
<title>[unknown] (15,135,171,259,546 samples, 92.50%)</title><rect x="10.1" y="421" width="1091.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="431.5" >[unknown]</text>
</g>
<g >
<title>tick_sched_timer (11,057,662,921 samples, 0.07%)</title><rect x="1100.4" y="309" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1103.41" y="319.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (3,319,216,453 samples, 0.02%)</title><rect x="1176.9" y="309" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1179.94" y="319.5" ></text>
</g>
<g >
<title>anon_vma_interval_tree_iter_first (11,617,357,211 samples, 0.07%)</title><rect x="1136.4" y="293" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.36" y="303.5" ></text>
</g>
<g >
<title>[unknown] (12,341,697,577 samples, 0.08%)</title><rect x="10.1" y="405" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.11" y="415.5" ></text>
</g>
<g >
<title>tcp_seq_start (9,585,219,312 samples, 0.06%)</title><rect x="1188.8" y="85" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1191.84" y="95.5" ></text>
</g>
</g>
</svg>
